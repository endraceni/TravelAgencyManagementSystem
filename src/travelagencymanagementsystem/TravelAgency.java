/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package travelagencymanagementsystem;

import java.sql.Date;
import java.text.DateFormat;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import javax.swing.ComboBoxModel;
import javax.swing.DefaultComboBoxModel;
import javax.swing.DefaultListModel;
import javax.swing.JOptionPane;
import javax.swing.table.TableModel;
import travelagencymanagementsystem.DBManagement.DestinationDAO;
import travelagencymanagementsystem.dto.Destination;
import javax.swing.ImageIcon;
import travelagencymanagementsystem.DBManagement.AccomodationDAO;
import travelagencymanagementsystem.DBManagement.LoginDAO;
import travelagencymanagementsystem.DBManagement.ReservationDAO;
import travelagencymanagementsystem.DBManagement.TravelAgentDAO;
import travelagencymanagementsystem.DBManagement.TravellerDAO;
import travelagencymanagementsystem.DBManagement.TripDAO;
import travelagencymanagementsystem.dto.Accomodation;
import travelagencymanagementsystem.dto.Login;
import travelagencymanagementsystem.dto.Reservation;
import travelagencymanagementsystem.dto.TravelAgent;
import travelagencymanagementsystem.dto.Traveller;
import travelagencymanagementsystem.dto.Trip;

/**
 *
 * @author User
 */
public class TravelAgency extends javax.swing.JFrame {

    /**
     * Creates new form TravelAgency
     */
    public TravelAgency() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jDialog1 = new javax.swing.JDialog();
        jMenuBar2 = new javax.swing.JMenuBar();
        jMenu3 = new javax.swing.JMenu();
        jMenu4 = new javax.swing.JMenu();
        jMenuItem1 = new javax.swing.JMenuItem();
        jDialog2 = new javax.swing.JDialog();
        logInPanel = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        usernameField = new javax.swing.JTextField();
        logInBtn = new javax.swing.JButton();
        passwordField = new javax.swing.JPasswordField();
        jLabel47 = new javax.swing.JLabel();
        destinationPanel = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        destinationsList = new javax.swing.JList<>();
        img = new javax.swing.JLabel();
        updateDestBtn = new javax.swing.JButton();
        deleteDestBtn = new javax.swing.JButton();
        newDestBtn = new javax.swing.JButton();
        destListLabel = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        attracDescArea = new javax.swing.JTextArea();
        jLabel51 = new javax.swing.JLabel();
        downloadDestList = new javax.swing.JButton();
        tripPanel = new javax.swing.JPanel();
        jScrollPane5 = new javax.swing.JScrollPane();
        tripList = new javax.swing.JList<>();
        updateTripBtn = new javax.swing.JButton();
        deleteTripBtn = new javax.swing.JButton();
        newTrip = new javax.swing.JButton();
        jLabel52 = new javax.swing.JLabel();
        jLabel53 = new javax.swing.JLabel();
        jLabel54 = new javax.swing.JLabel();
        jLabel55 = new javax.swing.JLabel();
        travellerPanel = new javax.swing.JPanel();
        jLabel36 = new javax.swing.JLabel();
        jScrollPane7 = new javax.swing.JScrollPane();
        travellersList = new javax.swing.JList<>();
        newTravellerBtn = new javax.swing.JButton();
        updTravellerBtn = new javax.swing.JButton();
        deleteTravellerBtn = new javax.swing.JButton();
        jLabel56 = new javax.swing.JLabel();
        jLabel57 = new javax.swing.JLabel();
        jLabel58 = new javax.swing.JLabel();
        accomodationPanel = new javax.swing.JPanel();
        jScrollPane8 = new javax.swing.JScrollPane();
        accomodationsList = new javax.swing.JList<>();
        jPanel1 = new javax.swing.JPanel();
        jLabel43 = new javax.swing.JLabel();
        jLabel44 = new javax.swing.JLabel();
        jLabel45 = new javax.swing.JLabel();
        jLabel46 = new javax.swing.JLabel();
        accmdtTypeField = new javax.swing.JTextField();
        addressField = new javax.swing.JTextField();
        costSpinner = new javax.swing.JSpinner();
        accmdtDestCmb = new javax.swing.JComboBox<>();
        updAccmdtBtn = new javax.swing.JButton();
        addAccmdtBtn = new javax.swing.JButton();
        cancelAccmdBtn = new javax.swing.JButton();
        deleteAccmdtBtn = new javax.swing.JButton();
        jLabel60 = new javax.swing.JLabel();
        jLabel61 = new javax.swing.JLabel();
        jLabel62 = new javax.swing.JLabel();
        jLabel63 = new javax.swing.JLabel();
        jLabel64 = new javax.swing.JLabel();
        jLabel65 = new javax.swing.JLabel();
        jLabel66 = new javax.swing.JLabel();
        jLabel67 = new javax.swing.JLabel();
        jLabel68 = new javax.swing.JLabel();
        jLabel69 = new javax.swing.JLabel();
        jLabel70 = new javax.swing.JLabel();
        jLabel71 = new javax.swing.JLabel();
        reservationPanel = new javax.swing.JPanel();
        jScrollPane9 = new javax.swing.JScrollPane();
        reservationList = new javax.swing.JList<>();
        jLabel48 = new javax.swing.JLabel();
        newReservationPanel = new javax.swing.JDesktopPane();
        jLabel49 = new javax.swing.JLabel();
        jLabel50 = new javax.swing.JLabel();
        rsvTravellerCmb = new javax.swing.JComboBox<>();
        rsvTripCmb = new javax.swing.JComboBox<>();
        newReservation = new javax.swing.JButton();
        cancelReservation = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        downloadRsvBtn = new javax.swing.JButton();
        agentPanel = new javax.swing.JPanel();
        jLabel23 = new javax.swing.JLabel();
        jScrollPane6 = new javax.swing.JScrollPane();
        agentList = new javax.swing.JList<>();
        modifyAgentPanel = new javax.swing.JPanel();
        cancelAgentModificationBtn = new javax.swing.JButton();
        deleteAgentBtn = new javax.swing.JButton();
        updateAgentBtn = new javax.swing.JButton();
        agentSalarySpinner = new javax.swing.JSpinner();
        jLabel27 = new javax.swing.JLabel();
        agentSurnameField = new javax.swing.JTextField();
        jLabel26 = new javax.swing.JLabel();
        jLabel25 = new javax.swing.JLabel();
        agentNameField = new javax.swing.JTextField();
        jLabel24 = new javax.swing.JLabel();
        addAgentBtn = new javax.swing.JButton();
        jButton1 = new javax.swing.JButton();
        jLabel59 = new javax.swing.JLabel();
        jLabel72 = new javax.swing.JLabel();
        jLabel73 = new javax.swing.JLabel();
        jLabel74 = new javax.swing.JLabel();
        jLabel75 = new javax.swing.JLabel();
        jLabel76 = new javax.swing.JLabel();
        newDestPanel = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        stateField = new javax.swing.JTextField();
        cityField = new javax.swing.JTextField();
        addDestBtn = new javax.swing.JButton();
        cancelDestBtn = new javax.swing.JButton();
        jLabel7 = new javax.swing.JLabel();
        jScrollPane3 = new javax.swing.JScrollPane();
        newDestAttracArea = new javax.swing.JTextArea();
        updateDestPanel = new javax.swing.JPanel();
        jLabel6 = new javax.swing.JLabel();
        cityField1 = new javax.swing.JTextField();
        updateDestination = new javax.swing.JButton();
        cancelDestUpdBtn = new javax.swing.JButton();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        stateField1 = new javax.swing.JTextField();
        jScrollPane4 = new javax.swing.JScrollPane();
        updtDestAttracArea = new javax.swing.JTextArea();
        jLabel11 = new javax.swing.JLabel();
        newTripPanel = new javax.swing.JPanel();
        jLabel12 = new javax.swing.JLabel();
        tittleField = new javax.swing.JTextField();
        destinationCmbBox = new javax.swing.JComboBox<>();
        jLabel13 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        priceField = new javax.swing.JSpinner();
        jLabel15 = new javax.swing.JLabel();
        jLabel16 = new javax.swing.JLabel();
        dateFromField = new javax.swing.JTextField();
        dateToField = new javax.swing.JTextField();
        addTripBtn = new javax.swing.JButton();
        cancelAddTripBtn = new javax.swing.JButton();
        updateTripPanel = new javax.swing.JPanel();
        jLabel17 = new javax.swing.JLabel();
        jLabel18 = new javax.swing.JLabel();
        jLabel19 = new javax.swing.JLabel();
        jLabel20 = new javax.swing.JLabel();
        jLabel21 = new javax.swing.JLabel();
        jLabel22 = new javax.swing.JLabel();
        updTripTittleField = new javax.swing.JTextField();
        updTripDestCmb = new javax.swing.JComboBox<>();
        updDateFromField = new javax.swing.JTextField();
        updDateToField = new javax.swing.JTextField();
        updPriceSpiner = new javax.swing.JSpinner();
        updateTripButton = new javax.swing.JButton();
        cancelTripUpd = new javax.swing.JButton();
        logedInAgent = new javax.swing.JPanel();
        jLabel28 = new javax.swing.JLabel();
        jLabel29 = new javax.swing.JLabel();
        jLabel30 = new javax.swing.JLabel();
        jLabel31 = new javax.swing.JLabel();
        accName = new javax.swing.JTextField();
        accSurname = new javax.swing.JTextField();
        accUsnm = new javax.swing.JTextField();
        accPwd = new javax.swing.JTextField();
        modifyAccData = new javax.swing.JButton();
        deleteAccountBtn = new javax.swing.JButton();
        jLabel32 = new javax.swing.JLabel();
        updateLoginDataBtn = new javax.swing.JButton();
        newAccount = new javax.swing.JInternalFrame();
        jLabel33 = new javax.swing.JLabel();
        jLabel34 = new javax.swing.JLabel();
        jLabel35 = new javax.swing.JLabel();
        agentCmb = new javax.swing.JComboBox<>();
        newAccUsernameField = new javax.swing.JTextField();
        newAccPwdField = new javax.swing.JTextField();
        addNewAccBtn = new javax.swing.JButton();
        cancelNewAccBtn = new javax.swing.JButton();
        newTravellerPanel = new javax.swing.JPanel();
        jLabel37 = new javax.swing.JLabel();
        jLabel38 = new javax.swing.JLabel();
        newTravName = new javax.swing.JTextField();
        newTravSurname = new javax.swing.JTextField();
        newTravBdate = new javax.swing.JTextField();
        jLabel39 = new javax.swing.JLabel();
        addTravellerBtn = new javax.swing.JButton();
        cancelnewTrav = new javax.swing.JButton();
        updateTravellerPanel = new javax.swing.JPanel();
        jLabel40 = new javax.swing.JLabel();
        jLabel41 = new javax.swing.JLabel();
        jLabel42 = new javax.swing.JLabel();
        updTravName = new javax.swing.JTextField();
        updTravSurname = new javax.swing.JTextField();
        updTravBdate = new javax.swing.JTextField();
        updateTravBtn = new javax.swing.JButton();
        cancelTravBtn = new javax.swing.JButton();
        welcomePanel = new javax.swing.JPanel();
        welcomeLabel = new javax.swing.JLabel();
        continueButton = new javax.swing.JButton();
        mainMenu = new javax.swing.JMenuBar();
        destinationMenu = new javax.swing.JMenu();
        tripMenu = new javax.swing.JMenu();
        travellerMenu = new javax.swing.JMenu();
        agentMenu = new javax.swing.JMenu();
        reserve = new javax.swing.JMenu();
        accomodationMenu = new javax.swing.JMenu();
        myAccountMenu = new javax.swing.JMenu();
        editAccountMenuItem = new javax.swing.JMenuItem();
        logoutMenuItem = new javax.swing.JMenuItem();

        javax.swing.GroupLayout jDialog1Layout = new javax.swing.GroupLayout(jDialog1.getContentPane());
        jDialog1.getContentPane().setLayout(jDialog1Layout);
        jDialog1Layout.setHorizontalGroup(
            jDialog1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 505, Short.MAX_VALUE)
        );
        jDialog1Layout.setVerticalGroup(
            jDialog1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 300, Short.MAX_VALUE)
        );

        jMenu3.setText("File");
        jMenuBar2.add(jMenu3);

        jMenu4.setText("Edit");
        jMenuBar2.add(jMenu4);

        jMenuItem1.setText("jMenuItem1");

        javax.swing.GroupLayout jDialog2Layout = new javax.swing.GroupLayout(jDialog2.getContentPane());
        jDialog2.getContentPane().setLayout(jDialog2Layout);
        jDialog2Layout.setHorizontalGroup(
            jDialog2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
        );
        jDialog2Layout.setVerticalGroup(
            jDialog2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 300, Short.MAX_VALUE)
        );

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setMaximumSize(new java.awt.Dimension(800, 500));
        setPreferredSize(new java.awt.Dimension(800, 500));
        addComponentListener(new java.awt.event.ComponentAdapter() {
            public void componentShown(java.awt.event.ComponentEvent evt) {
                formComponentShown(evt);
            }
        });
        getContentPane().setLayout(new java.awt.CardLayout());

        jLabel1.setText("Username");

        jLabel2.setText("Password");

        logInBtn.setBackground(java.awt.SystemColor.textHighlight);
        logInBtn.setForeground(new java.awt.Color(204, 204, 204));
        logInBtn.setText("Log In");
        logInBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                logInBtnActionPerformed(evt);
            }
        });

        passwordField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                passwordFieldActionPerformed(evt);
            }
        });

        jLabel47.setBackground(new java.awt.Color(255, 255, 255));
        jLabel47.setFont(new java.awt.Font("Times New Roman", 3, 14)); // NOI18N
        jLabel47.setForeground(new java.awt.Color(102, 102, 102));
        jLabel47.setText("Please enter your credentials to continue");

        javax.swing.GroupLayout logInPanelLayout = new javax.swing.GroupLayout(logInPanel);
        logInPanel.setLayout(logInPanelLayout);
        logInPanelLayout.setHorizontalGroup(
            logInPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(logInPanelLayout.createSequentialGroup()
                .addGroup(logInPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(logInPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addGroup(logInPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(logInPanelLayout.createSequentialGroup()
                                .addGap(187, 187, 187)
                                .addComponent(logInBtn))
                            .addGroup(logInPanelLayout.createSequentialGroup()
                                .addGap(164, 164, 164)
                                .addComponent(passwordField, javax.swing.GroupLayout.PREFERRED_SIZE, 109, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGroup(logInPanelLayout.createSequentialGroup()
                            .addContainerGap()
                            .addGroup(logInPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jLabel2)
                                .addGroup(logInPanelLayout.createSequentialGroup()
                                    .addComponent(jLabel1)
                                    .addGap(27, 27, 27)
                                    .addComponent(usernameField, javax.swing.GroupLayout.PREFERRED_SIZE, 109, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                    .addGroup(logInPanelLayout.createSequentialGroup()
                        .addGap(69, 69, 69)
                        .addComponent(jLabel47)))
                .addContainerGap(491, Short.MAX_VALUE))
        );
        logInPanelLayout.setVerticalGroup(
            logInPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(logInPanelLayout.createSequentialGroup()
                .addGap(68, 68, 68)
                .addComponent(jLabel47)
                .addGap(35, 35, 35)
                .addGroup(logInPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(usernameField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1))
                .addGap(26, 26, 26)
                .addGroup(logInPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(passwordField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2))
                .addGap(31, 31, 31)
                .addComponent(logInBtn)
                .addContainerGap(102, Short.MAX_VALUE))
        );

        getContentPane().add(logInPanel, "card3");

        destinationPanel.addComponentListener(new java.awt.event.ComponentAdapter() {
            public void componentShown(java.awt.event.ComponentEvent evt) {
                destinationPanelComponentShown(evt);
            }
        });

        jScrollPane2.setBorder(javax.swing.BorderFactory.createMatteBorder(1, 1, 1, 1, new java.awt.Color(153, 153, 255)));

        destinationsList.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                destinationsListMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(destinationsList);

        img.setIcon(new javax.swing.ImageIcon(getClass().getResource("/travelagencymanagementsystem/resources/travel.jpg"))); // NOI18N

        updateDestBtn.setBackground(new java.awt.Color(0, 153, 51));
        updateDestBtn.setText("Update");
        updateDestBtn.setEnabled(false);
        updateDestBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updateDestBtnActionPerformed(evt);
            }
        });

        deleteDestBtn.setBackground(new java.awt.Color(255, 0, 0));
        deleteDestBtn.setForeground(new java.awt.Color(255, 255, 255));
        deleteDestBtn.setText("Delete");
        deleteDestBtn.setEnabled(false);
        deleteDestBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteDestBtnActionPerformed(evt);
            }
        });

        newDestBtn.setBackground(new java.awt.Color(51, 102, 255));
        newDestBtn.setForeground(new java.awt.Color(255, 255, 255));
        newDestBtn.setText("Add");
        newDestBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                newDestBtnActionPerformed(evt);
            }
        });

        destListLabel.setFont(new java.awt.Font("Palatino Linotype", 2, 18)); // NOI18N
        destListLabel.setForeground(new java.awt.Color(255, 0, 102));
        destListLabel.setText("Destinations List");

        attracDescArea.setEditable(false);
        attracDescArea.setColumns(20);
        attracDescArea.setRows(5);
        attracDescArea.setText("click in \none destination");
        jScrollPane1.setViewportView(attracDescArea);

        jLabel51.setText("Click in one of the destinations listed to check it's attractions");

        downloadDestList.setText("Download Destinations List");
        downloadDestList.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                downloadDestListActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout destinationPanelLayout = new javax.swing.GroupLayout(destinationPanel);
        destinationPanel.setLayout(destinationPanelLayout);
        destinationPanelLayout.setHorizontalGroup(
            destinationPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(destinationPanelLayout.createSequentialGroup()
                .addGroup(destinationPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(destinationPanelLayout.createSequentialGroup()
                        .addGroup(destinationPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(destinationPanelLayout.createSequentialGroup()
                                .addGap(69, 69, 69)
                                .addComponent(updateDestBtn)
                                .addGap(18, 18, 18)
                                .addComponent(deleteDestBtn))
                            .addGroup(destinationPanelLayout.createSequentialGroup()
                                .addGap(60, 60, 60)
                                .addComponent(destListLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 135, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(33, 33, 33))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, destinationPanelLayout.createSequentialGroup()
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 217, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(10, 10, 10)))
                .addGroup(destinationPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(destinationPanelLayout.createSequentialGroup()
                        .addGap(3, 3, 3)
                        .addComponent(jLabel51, javax.swing.GroupLayout.PREFERRED_SIZE, 296, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(destinationPanelLayout.createSequentialGroup()
                        .addGroup(destinationPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addGroup(destinationPanelLayout.createSequentialGroup()
                                .addComponent(newDestBtn)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(downloadDestList))
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(img, javax.swing.GroupLayout.PREFERRED_SIZE, 291, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(1107, Short.MAX_VALUE))
        );
        destinationPanelLayout.setVerticalGroup(
            destinationPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(destinationPanelLayout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addGroup(destinationPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(destListLabel)
                    .addComponent(jLabel51, javax.swing.GroupLayout.PREFERRED_SIZE, 18, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(destinationPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1)
                    .addGroup(destinationPanelLayout.createSequentialGroup()
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 196, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(img, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 353, Short.MAX_VALUE))
                .addGap(20, 20, 20)
                .addGroup(destinationPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(updateDestBtn)
                    .addComponent(deleteDestBtn)
                    .addComponent(newDestBtn)
                    .addComponent(downloadDestList))
                .addGap(21, 21, 21))
        );

        getContentPane().add(destinationPanel, "card4");

        tripPanel.addComponentListener(new java.awt.event.ComponentAdapter() {
            public void componentShown(java.awt.event.ComponentEvent evt) {
                tripPanelComponentShown(evt);
            }
        });

        tripList.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tripListMouseClicked(evt);
            }
        });
        jScrollPane5.setViewportView(tripList);

        updateTripBtn.setBackground(new java.awt.Color(0, 204, 102));
        updateTripBtn.setForeground(new java.awt.Color(255, 255, 255));
        updateTripBtn.setText("Update");
        updateTripBtn.setEnabled(false);
        updateTripBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updateTripBtnActionPerformed(evt);
            }
        });

        deleteTripBtn.setBackground(new java.awt.Color(255, 51, 51));
        deleteTripBtn.setForeground(new java.awt.Color(255, 255, 255));
        deleteTripBtn.setText("Delete");
        deleteTripBtn.setEnabled(false);
        deleteTripBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteTripBtnActionPerformed(evt);
            }
        });

        newTrip.setBackground(new java.awt.Color(51, 51, 255));
        newTrip.setForeground(new java.awt.Color(255, 255, 255));
        newTrip.setText("New");
        newTrip.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                newTripActionPerformed(evt);
            }
        });

        jLabel52.setText("To add a new trip click New ");

        jLabel53.setText("To modify an existing trip, click Update");

        jLabel54.setText("To delete a trip, click Delete");

        jLabel55.setFont(new java.awt.Font("Times New Roman", 3, 14)); // NOI18N
        jLabel55.setForeground(new java.awt.Color(51, 51, 255));
        jLabel55.setText("Trip's list: ");

        javax.swing.GroupLayout tripPanelLayout = new javax.swing.GroupLayout(tripPanel);
        tripPanel.setLayout(tripPanelLayout);
        tripPanelLayout.setHorizontalGroup(
            tripPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(tripPanelLayout.createSequentialGroup()
                .addGap(53, 53, 53)
                .addGroup(tripPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel55)
                    .addGroup(tripPanelLayout.createSequentialGroup()
                        .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(76, 76, 76)
                        .addGroup(tripPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel52)
                            .addComponent(jLabel53)
                            .addComponent(jLabel54)))
                    .addGroup(tripPanelLayout.createSequentialGroup()
                        .addComponent(updateTripBtn)
                        .addGap(18, 18, 18)
                        .addComponent(deleteTripBtn)
                        .addGap(31, 31, 31)
                        .addComponent(newTrip)))
                .addContainerGap(1304, Short.MAX_VALUE))
        );
        tripPanelLayout.setVerticalGroup(
            tripPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(tripPanelLayout.createSequentialGroup()
                .addGroup(tripPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(tripPanelLayout.createSequentialGroup()
                        .addGap(17, 17, 17)
                        .addComponent(jLabel55)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 175, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(tripPanelLayout.createSequentialGroup()
                        .addGap(51, 51, 51)
                        .addComponent(jLabel52)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabel53)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabel54)))
                .addGap(27, 27, 27)
                .addGroup(tripPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(deleteTripBtn)
                    .addComponent(updateTripBtn)
                    .addComponent(newTrip))
                .addContainerGap(198, Short.MAX_VALUE))
        );

        getContentPane().add(tripPanel, "card5");

        travellerPanel.addComponentListener(new java.awt.event.ComponentAdapter() {
            public void componentShown(java.awt.event.ComponentEvent evt) {
                travellerPanelComponentShown(evt);
            }
        });

        jLabel36.setText("Travellers List");

        travellersList.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                travellersListMouseClicked(evt);
            }
        });
        jScrollPane7.setViewportView(travellersList);

        newTravellerBtn.setBackground(new java.awt.Color(51, 51, 255));
        newTravellerBtn.setForeground(new java.awt.Color(255, 255, 255));
        newTravellerBtn.setText("New Traveller");
        newTravellerBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                newTravellerBtnActionPerformed(evt);
            }
        });

        updTravellerBtn.setBackground(new java.awt.Color(0, 153, 0));
        updTravellerBtn.setForeground(new java.awt.Color(255, 255, 255));
        updTravellerBtn.setText("Update");
        updTravellerBtn.setEnabled(false);
        updTravellerBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updTravellerBtnActionPerformed(evt);
            }
        });

        deleteTravellerBtn.setBackground(new java.awt.Color(204, 51, 0));
        deleteTravellerBtn.setForeground(new java.awt.Color(255, 255, 255));
        deleteTravellerBtn.setText("Delete");
        deleteTravellerBtn.setEnabled(false);
        deleteTravellerBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteTravellerBtnActionPerformed(evt);
            }
        });

        jLabel56.setText("To add a new traveller, click New Traveller");

        jLabel57.setText("To modify traveller's data, click Update");

        jLabel58.setText("To delete a traveller, click Delete");

        javax.swing.GroupLayout travellerPanelLayout = new javax.swing.GroupLayout(travellerPanel);
        travellerPanel.setLayout(travellerPanelLayout);
        travellerPanelLayout.setHorizontalGroup(
            travellerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(travellerPanelLayout.createSequentialGroup()
                .addGroup(travellerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(travellerPanelLayout.createSequentialGroup()
                        .addGap(54, 54, 54)
                        .addComponent(jScrollPane7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(48, 48, 48)
                        .addGroup(travellerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(newTravellerBtn, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(updTravellerBtn, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(deleteTravellerBtn, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addGroup(travellerPanelLayout.createSequentialGroup()
                        .addGap(133, 133, 133)
                        .addComponent(jLabel36)))
                .addGap(81, 81, 81)
                .addGroup(travellerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel56)
                    .addComponent(jLabel57)
                    .addComponent(jLabel58))
                .addContainerGap(1133, Short.MAX_VALUE))
        );
        travellerPanelLayout.setVerticalGroup(
            travellerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(travellerPanelLayout.createSequentialGroup()
                .addGap(43, 43, 43)
                .addComponent(jLabel36)
                .addGap(18, 18, 18)
                .addGroup(travellerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(travellerPanelLayout.createSequentialGroup()
                        .addGroup(travellerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(newTravellerBtn)
                            .addComponent(jLabel56))
                        .addGap(18, 18, 18)
                        .addGroup(travellerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel57)
                            .addComponent(updTravellerBtn))
                        .addGap(18, 18, 18)
                        .addGroup(travellerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(deleteTravellerBtn)
                            .addComponent(jLabel58))))
                .addContainerGap(263, Short.MAX_VALUE))
        );

        getContentPane().add(travellerPanel, "card6");

        accomodationPanel.addComponentListener(new java.awt.event.ComponentAdapter() {
            public void componentShown(java.awt.event.ComponentEvent evt) {
                accomodationPanelComponentShown(evt);
            }
        });

        accomodationsList.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                accomodationsListMouseClicked(evt);
            }
        });
        jScrollPane8.setViewportView(accomodationsList);

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Add/Modify", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 1, 12), new java.awt.Color(255, 51, 51))); // NOI18N

        jLabel43.setText("Type");

        jLabel44.setText("Address");

        jLabel45.setText("Price");

        jLabel46.setText("Destination");

        costSpinner.setModel(new javax.swing.SpinnerNumberModel(0.0d, null, null, 1.0d));

        updAccmdtBtn.setText("Update");
        updAccmdtBtn.setEnabled(false);
        updAccmdtBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updAccmdtBtnActionPerformed(evt);
            }
        });

        addAccmdtBtn.setText("Add");
        addAccmdtBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addAccmdtBtnActionPerformed(evt);
            }
        });

        cancelAccmdBtn.setText("Cancel");
        cancelAccmdBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cancelAccmdBtnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(jLabel46, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel45, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel44, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel43, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(accmdtDestCmb, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                        .addComponent(accmdtTypeField, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 90, Short.MAX_VALUE)
                                        .addComponent(addressField, javax.swing.GroupLayout.Alignment.LEADING))
                                    .addComponent(costSpinner, javax.swing.GroupLayout.PREFERRED_SIZE, 81, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(0, 0, Short.MAX_VALUE))))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(48, 48, 48)
                        .addComponent(addAccmdtBtn)
                        .addGap(18, 18, 18)
                        .addComponent(updAccmdtBtn)
                        .addGap(18, 18, 18)
                        .addComponent(cancelAccmdBtn)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(23, 23, 23)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel43)
                            .addComponent(accmdtTypeField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addComponent(jLabel44))
                    .addComponent(addressField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel45)
                    .addComponent(costSpinner, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel46)
                    .addComponent(accmdtDestCmb, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 36, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(addAccmdtBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(updAccmdtBtn)
                    .addComponent(cancelAccmdBtn))
                .addGap(26, 26, 26))
        );

        deleteAccmdtBtn.setText("Delete");
        deleteAccmdtBtn.setEnabled(false);
        deleteAccmdtBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteAccmdtBtnActionPerformed(evt);
            }
        });

        jLabel60.setText("To add a new accomodation follow the listed steps:");

        jLabel61.setText("1. Click inside the Add/Modify box");

        jLabel62.setText("2. Enter the needed data");

        jLabel63.setText("3.Click Add button");

        jLabel64.setText("To modify an existing accomodation follow the steps:");

        jLabel65.setText("1. Click in one of the listed accomodations");

        jLabel66.setText("2. Modify the data");

        jLabel67.setText("3. Click update");

        jLabel68.setText("To delete an accomodation follow the steps:");

        jLabel69.setText("1. Click/select one of the listed accomodations");

        jLabel70.setText("2. Click Delete");

        jLabel71.setFont(new java.awt.Font("Times New Roman", 3, 14)); // NOI18N
        jLabel71.setForeground(new java.awt.Color(255, 51, 51));
        jLabel71.setText("Accomodations List");

        javax.swing.GroupLayout accomodationPanelLayout = new javax.swing.GroupLayout(accomodationPanel);
        accomodationPanel.setLayout(accomodationPanelLayout);
        accomodationPanelLayout.setHorizontalGroup(
            accomodationPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(accomodationPanelLayout.createSequentialGroup()
                .addGroup(accomodationPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(accomodationPanelLayout.createSequentialGroup()
                        .addGap(48, 48, 48)
                        .addGroup(accomodationPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jScrollPane8, javax.swing.GroupLayout.PREFERRED_SIZE, 208, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(deleteAccmdtBtn))
                        .addGap(56, 56, 56)
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(28, 28, 28)
                        .addGroup(accomodationPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel60)
                            .addComponent(jLabel64)
                            .addComponent(jLabel68)
                            .addGroup(accomodationPanelLayout.createSequentialGroup()
                                .addGap(10, 10, 10)
                                .addGroup(accomodationPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel62)
                                    .addComponent(jLabel61)
                                    .addComponent(jLabel63)
                                    .addComponent(jLabel65)
                                    .addComponent(jLabel66)
                                    .addComponent(jLabel67)
                                    .addComponent(jLabel69)
                                    .addComponent(jLabel70)))))
                    .addGroup(accomodationPanelLayout.createSequentialGroup()
                        .addGap(88, 88, 88)
                        .addComponent(jLabel71)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        accomodationPanelLayout.setVerticalGroup(
            accomodationPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(accomodationPanelLayout.createSequentialGroup()
                .addGap(43, 43, 43)
                .addComponent(jLabel71)
                .addGap(18, 18, 18)
                .addGroup(accomodationPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(accomodationPanelLayout.createSequentialGroup()
                        .addComponent(jLabel60)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel61)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel62)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel63)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel64)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabel65)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabel66)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabel67)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel68)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel69)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel70))
                    .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(accomodationPanelLayout.createSequentialGroup()
                        .addComponent(jScrollPane8, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(65, 65, 65)
                        .addComponent(deleteAccmdtBtn)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        getContentPane().add(accomodationPanel, "card7");

        reservationPanel.addComponentListener(new java.awt.event.ComponentAdapter() {
            public void componentShown(java.awt.event.ComponentEvent evt) {
                reservationPanelComponentShown(evt);
            }
        });

        reservationList.setCursor(new java.awt.Cursor(java.awt.Cursor.TEXT_CURSOR));
        jScrollPane9.setViewportView(reservationList);

        jLabel48.setFont(new java.awt.Font("Times New Roman", 3, 18)); // NOI18N
        jLabel48.setForeground(new java.awt.Color(255, 51, 51));
        jLabel48.setText("Reservation List");

        newReservationPanel.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "New Reservation", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 3, 14), new java.awt.Color(255, 153, 0))); // NOI18N
        newReservationPanel.setForeground(new java.awt.Color(255, 204, 255));

        jLabel49.setText("Traveller");

        jLabel50.setText("Trip");

        newReservation.setText("New");
        newReservation.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                newReservationActionPerformed(evt);
            }
        });

        cancelReservation.setText("Cancel");

        newReservationPanel.setLayer(jLabel49, javax.swing.JLayeredPane.DEFAULT_LAYER);
        newReservationPanel.setLayer(jLabel50, javax.swing.JLayeredPane.DEFAULT_LAYER);
        newReservationPanel.setLayer(rsvTravellerCmb, javax.swing.JLayeredPane.DEFAULT_LAYER);
        newReservationPanel.setLayer(rsvTripCmb, javax.swing.JLayeredPane.DEFAULT_LAYER);
        newReservationPanel.setLayer(newReservation, javax.swing.JLayeredPane.DEFAULT_LAYER);
        newReservationPanel.setLayer(cancelReservation, javax.swing.JLayeredPane.DEFAULT_LAYER);

        javax.swing.GroupLayout newReservationPanelLayout = new javax.swing.GroupLayout(newReservationPanel);
        newReservationPanel.setLayout(newReservationPanelLayout);
        newReservationPanelLayout.setHorizontalGroup(
            newReservationPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(newReservationPanelLayout.createSequentialGroup()
                .addGroup(newReservationPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(newReservationPanelLayout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addGroup(newReservationPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel49)
                            .addComponent(jLabel50))
                        .addGap(18, 18, 18)
                        .addGroup(newReservationPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(rsvTripCmb, javax.swing.GroupLayout.PREFERRED_SIZE, 193, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(rsvTravellerCmb, javax.swing.GroupLayout.PREFERRED_SIZE, 169, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(newReservationPanelLayout.createSequentialGroup()
                        .addGap(30, 30, 30)
                        .addComponent(newReservation)
                        .addGap(55, 55, 55)
                        .addComponent(cancelReservation)))
                .addContainerGap(32, Short.MAX_VALUE))
        );
        newReservationPanelLayout.setVerticalGroup(
            newReservationPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(newReservationPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(newReservationPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel49)
                    .addComponent(rsvTravellerCmb, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(newReservationPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel50)
                    .addComponent(rsvTripCmb, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(38, 38, 38)
                .addGroup(newReservationPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(newReservation)
                    .addComponent(cancelReservation))
                .addContainerGap(112, Short.MAX_VALUE))
        );

        jButton4.setText("Delete");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        downloadRsvBtn.setText("Download Reservations");
        downloadRsvBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                downloadRsvBtnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout reservationPanelLayout = new javax.swing.GroupLayout(reservationPanel);
        reservationPanel.setLayout(reservationPanelLayout);
        reservationPanelLayout.setHorizontalGroup(
            reservationPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(reservationPanelLayout.createSequentialGroup()
                .addGroup(reservationPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(reservationPanelLayout.createSequentialGroup()
                        .addGap(48, 48, 48)
                        .addComponent(downloadRsvBtn)
                        .addGap(50, 50, 50)
                        .addComponent(jButton4))
                    .addGroup(reservationPanelLayout.createSequentialGroup()
                        .addGap(55, 55, 55)
                        .addComponent(jLabel48))
                    .addGroup(reservationPanelLayout.createSequentialGroup()
                        .addGap(24, 24, 24)
                        .addComponent(jScrollPane9, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(74, 74, 74)
                .addComponent(newReservationPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(1181, Short.MAX_VALUE))
        );
        reservationPanelLayout.setVerticalGroup(
            reservationPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, reservationPanelLayout.createSequentialGroup()
                .addGap(85, 85, 85)
                .addComponent(jLabel48)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane9, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(reservationPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton4)
                    .addComponent(downloadRsvBtn))
                .addGap(43, 43, 43))
            .addGroup(reservationPanelLayout.createSequentialGroup()
                .addGap(61, 61, 61)
                .addComponent(newReservationPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(139, Short.MAX_VALUE))
        );

        getContentPane().add(reservationPanel, "card8");

        agentPanel.addComponentListener(new java.awt.event.ComponentAdapter() {
            public void componentShown(java.awt.event.ComponentEvent evt) {
                agentPanelComponentShown(evt);
            }
        });

        jLabel23.setText("AGENTS");

        agentList.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                agentListMouseClicked(evt);
            }
        });
        jScrollPane6.setViewportView(agentList);

        modifyAgentPanel.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Modify Agent", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Times New Roman", 2, 12), new java.awt.Color(255, 153, 153))); // NOI18N
        modifyAgentPanel.setEnabled(false);
        modifyAgentPanel.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                modifyAgentPanelMouseClicked(evt);
            }
        });

        cancelAgentModificationBtn.setBackground(new java.awt.Color(255, 204, 255));
        cancelAgentModificationBtn.setForeground(new java.awt.Color(102, 102, 102));
        cancelAgentModificationBtn.setText("Cancel");
        cancelAgentModificationBtn.setEnabled(false);
        cancelAgentModificationBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cancelAgentModificationBtnActionPerformed(evt);
            }
        });

        deleteAgentBtn.setBackground(new java.awt.Color(255, 0, 0));
        deleteAgentBtn.setForeground(new java.awt.Color(255, 255, 255));
        deleteAgentBtn.setText("Delete");
        deleteAgentBtn.setEnabled(false);
        deleteAgentBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteAgentBtnActionPerformed(evt);
            }
        });

        updateAgentBtn.setBackground(new java.awt.Color(0, 204, 51));
        updateAgentBtn.setForeground(new java.awt.Color(255, 255, 255));
        updateAgentBtn.setText("Update");
        updateAgentBtn.setEnabled(false);
        updateAgentBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updateAgentBtnActionPerformed(evt);
            }
        });

        agentSalarySpinner.setEnabled(false);

        jLabel27.setText("Salary");

        agentSurnameField.setEnabled(false);

        jLabel26.setText("Surname");

        jLabel25.setText("Name");

        agentNameField.setEnabled(false);
        agentNameField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                agentNameFieldActionPerformed(evt);
            }
        });

        addAgentBtn.setBackground(new java.awt.Color(51, 51, 255));
        addAgentBtn.setForeground(new java.awt.Color(255, 255, 255));
        addAgentBtn.setText("Add");
        addAgentBtn.setEnabled(false);
        addAgentBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addAgentBtnActionPerformed(evt);
            }
        });

        jButton1.setBackground(new java.awt.Color(255, 153, 255));
        jButton1.setFont(new java.awt.Font("Times New Roman", 3, 11)); // NOI18N
        jButton1.setText("Create Account");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout modifyAgentPanelLayout = new javax.swing.GroupLayout(modifyAgentPanel);
        modifyAgentPanel.setLayout(modifyAgentPanelLayout);
        modifyAgentPanelLayout.setHorizontalGroup(
            modifyAgentPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(modifyAgentPanelLayout.createSequentialGroup()
                .addGap(118, 118, 118)
                .addComponent(jLabel24)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jButton1)
                .addContainerGap())
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, modifyAgentPanelLayout.createSequentialGroup()
                .addContainerGap(26, Short.MAX_VALUE)
                .addGroup(modifyAgentPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, modifyAgentPanelLayout.createSequentialGroup()
                        .addGroup(modifyAgentPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel26)
                            .addComponent(jLabel27)
                            .addComponent(jLabel25))
                        .addGap(18, 18, 18)
                        .addGroup(modifyAgentPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(agentNameField, javax.swing.GroupLayout.PREFERRED_SIZE, 72, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(agentSalarySpinner, javax.swing.GroupLayout.PREFERRED_SIZE, 72, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(agentSurnameField, javax.swing.GroupLayout.PREFERRED_SIZE, 72, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(122, 122, 122))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, modifyAgentPanelLayout.createSequentialGroup()
                        .addComponent(addAgentBtn)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(updateAgentBtn)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(deleteAgentBtn)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(cancelAgentModificationBtn)
                        .addGap(25, 25, 25))))
        );
        modifyAgentPanelLayout.setVerticalGroup(
            modifyAgentPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, modifyAgentPanelLayout.createSequentialGroup()
                .addGroup(modifyAgentPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(modifyAgentPanelLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel24))
                    .addComponent(jButton1))
                .addGap(9, 9, 9)
                .addGroup(modifyAgentPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel25)
                    .addComponent(agentNameField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(modifyAgentPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel26)
                    .addComponent(agentSurnameField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(modifyAgentPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel27)
                    .addComponent(agentSalarySpinner, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 41, Short.MAX_VALUE)
                .addGroup(modifyAgentPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(updateAgentBtn)
                    .addComponent(deleteAgentBtn)
                    .addComponent(cancelAgentModificationBtn)
                    .addComponent(addAgentBtn))
                .addGap(41, 41, 41))
        );

        jLabel59.setText("To add a new agent, double click in Add/Modify Agent box");

        jLabel72.setFont(new java.awt.Font("Tahoma", 2, 11)); // NOI18N
        jLabel72.setForeground(new java.awt.Color(204, 0, 0));
        jLabel72.setText("* Do not forget to create an account for the new agent");

        jLabel73.setText("To modify one agent, follow the steps:");

        jLabel74.setText("1. Click in one of agents");

        jLabel75.setText("2. Modify agent's data");

        jLabel76.setText("3. Click Update");

        javax.swing.GroupLayout agentPanelLayout = new javax.swing.GroupLayout(agentPanel);
        agentPanel.setLayout(agentPanelLayout);
        agentPanelLayout.setHorizontalGroup(
            agentPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, agentPanelLayout.createSequentialGroup()
                .addGroup(agentPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(agentPanelLayout.createSequentialGroup()
                        .addGap(87, 87, 87)
                        .addComponent(jLabel23))
                    .addGroup(agentPanelLayout.createSequentialGroup()
                        .addGap(46, 46, 46)
                        .addComponent(jScrollPane6, javax.swing.GroupLayout.PREFERRED_SIZE, 173, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(28, 28, 28)
                .addComponent(modifyAgentPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(agentPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(agentPanelLayout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addComponent(jLabel59))
                    .addGroup(agentPanelLayout.createSequentialGroup()
                        .addGap(37, 37, 37)
                        .addComponent(jLabel72))
                    .addGroup(agentPanelLayout.createSequentialGroup()
                        .addGap(26, 26, 26)
                        .addGroup(agentPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel73)
                            .addGroup(agentPanelLayout.createSequentialGroup()
                                .addGap(10, 10, 10)
                                .addGroup(agentPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel75)
                                    .addComponent(jLabel74)
                                    .addComponent(jLabel76))))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        agentPanelLayout.setVerticalGroup(
            agentPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(agentPanelLayout.createSequentialGroup()
                .addGroup(agentPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(agentPanelLayout.createSequentialGroup()
                        .addGap(36, 36, 36)
                        .addGroup(agentPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(agentPanelLayout.createSequentialGroup()
                                .addComponent(jLabel23)
                                .addGap(12, 12, 12)
                                .addComponent(jScrollPane6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(modifyAgentPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(agentPanelLayout.createSequentialGroup()
                        .addGap(48, 48, 48)
                        .addComponent(jLabel59)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel72)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel73)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel74)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabel75)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabel76)))
                .addContainerGap(178, Short.MAX_VALUE))
        );

        getContentPane().add(agentPanel, "card9");

        newDestPanel.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));

        jLabel3.setFont(new java.awt.Font("Eras Light ITC", 1, 14)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(153, 153, 255));
        jLabel3.setText("Add a New Destination");

        jLabel4.setText("State");

        jLabel5.setText("City");

        addDestBtn.setText("Add Destination");
        addDestBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addDestBtnActionPerformed(evt);
            }
        });

        cancelDestBtn.setText("Cancel");
        cancelDestBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cancelDestBtnActionPerformed(evt);
            }
        });

        jLabel7.setText("Attractions");

        newDestAttracArea.setColumns(20);
        newDestAttracArea.setRows(5);
        jScrollPane3.setViewportView(newDestAttracArea);

        javax.swing.GroupLayout newDestPanelLayout = new javax.swing.GroupLayout(newDestPanel);
        newDestPanel.setLayout(newDestPanelLayout);
        newDestPanelLayout.setHorizontalGroup(
            newDestPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(newDestPanelLayout.createSequentialGroup()
                .addGroup(newDestPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(newDestPanelLayout.createSequentialGroup()
                        .addGap(162, 162, 162)
                        .addComponent(jLabel3))
                    .addGroup(newDestPanelLayout.createSequentialGroup()
                        .addGroup(newDestPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(newDestPanelLayout.createSequentialGroup()
                                .addGap(29, 29, 29)
                                .addGroup(newDestPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel4)
                                    .addComponent(jLabel5))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(newDestPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(cityField, javax.swing.GroupLayout.DEFAULT_SIZE, 139, Short.MAX_VALUE)
                                    .addComponent(stateField)))
                            .addGroup(newDestPanelLayout.createSequentialGroup()
                                .addGap(104, 104, 104)
                                .addComponent(addDestBtn)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 1254, Short.MAX_VALUE)
                        .addGroup(newDestPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(cancelDestBtn)
                            .addComponent(jLabel7))))
                .addGap(243, 243, 243))
        );
        newDestPanelLayout.setVerticalGroup(
            newDestPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(newDestPanelLayout.createSequentialGroup()
                .addGap(23, 23, 23)
                .addComponent(jLabel3)
                .addGroup(newDestPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(newDestPanelLayout.createSequentialGroup()
                        .addGap(37, 37, 37)
                        .addGroup(newDestPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(stateField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel4))
                        .addGap(18, 18, 18)
                        .addGroup(newDestPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(cityField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel5))
                        .addGap(50, 50, 50))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, newDestPanelLayout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabel7)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)))
                .addGroup(newDestPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(addDestBtn)
                    .addComponent(cancelDestBtn))
                .addContainerGap(260, Short.MAX_VALUE))
        );

        getContentPane().add(newDestPanel, "card10");

        updateDestPanel.addComponentListener(new java.awt.event.ComponentAdapter() {
            public void componentShown(java.awt.event.ComponentEvent evt) {
                updateDestPanelComponentShown(evt);
            }
        });

        jLabel6.setText("Update Destination");

        updateDestination.setText("Update");
        updateDestination.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updateDestinationActionPerformed(evt);
            }
        });

        cancelDestUpdBtn.setText("Cancel");
        cancelDestUpdBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cancelDestUpdBtnActionPerformed(evt);
            }
        });

        jLabel8.setText("State");

        jLabel9.setText("City");

        updtDestAttracArea.setColumns(20);
        updtDestAttracArea.setRows(5);
        jScrollPane4.setViewportView(updtDestAttracArea);

        jLabel11.setText("Attractions");

        javax.swing.GroupLayout updateDestPanelLayout = new javax.swing.GroupLayout(updateDestPanel);
        updateDestPanel.setLayout(updateDestPanelLayout);
        updateDestPanelLayout.setHorizontalGroup(
            updateDestPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(updateDestPanelLayout.createSequentialGroup()
                .addGroup(updateDestPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(updateDestPanelLayout.createSequentialGroup()
                        .addGap(190, 190, 190)
                        .addComponent(jLabel6))
                    .addGroup(updateDestPanelLayout.createSequentialGroup()
                        .addGap(63, 63, 63)
                        .addGroup(updateDestPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(updateDestination)
                            .addGroup(updateDestPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addGroup(updateDestPanelLayout.createSequentialGroup()
                                    .addComponent(jLabel9)
                                    .addGap(40, 40, 40)
                                    .addComponent(stateField1, javax.swing.GroupLayout.PREFERRED_SIZE, 106, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(updateDestPanelLayout.createSequentialGroup()
                                    .addComponent(jLabel8)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(cityField1, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addGap(47, 47, 47)
                        .addGroup(updateDestPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(cancelDestUpdBtn)
                            .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel11))))
                .addContainerGap(1435, Short.MAX_VALUE))
        );
        updateDestPanelLayout.setVerticalGroup(
            updateDestPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(updateDestPanelLayout.createSequentialGroup()
                .addGap(23, 23, 23)
                .addComponent(jLabel6)
                .addGap(21, 21, 21)
                .addComponent(jLabel11)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(updateDestPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(updateDestPanelLayout.createSequentialGroup()
                        .addGroup(updateDestPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(stateField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel9))
                        .addGap(29, 29, 29)
                        .addGroup(updateDestPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel8)
                            .addComponent(cityField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(24, 24, 24)
                .addGroup(updateDestPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(updateDestination)
                    .addComponent(cancelDestUpdBtn))
                .addContainerGap(247, Short.MAX_VALUE))
        );

        getContentPane().add(updateDestPanel, "card11");

        newTripPanel.addComponentListener(new java.awt.event.ComponentAdapter() {
            public void componentShown(java.awt.event.ComponentEvent evt) {
                newTripPanelComponentShown(evt);
            }
        });

        jLabel12.setText("Title");

        tittleField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tittleFieldActionPerformed(evt);
            }
        });

        jLabel13.setText("Destination");

        jLabel14.setText("Price");

        priceField.setModel(new javax.swing.SpinnerNumberModel(0.0d, null, null, 1.0d));

        jLabel15.setText("Date From");

        jLabel16.setText("Date To:");

        dateFromField.setText("Ex. 01-01-2020");
        dateFromField.setCaretColor(new java.awt.Color(204, 204, 204));

        dateToField.setText("Ex.01-01-2020");

        addTripBtn.setText("Add Trip");
        addTripBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addTripBtnActionPerformed(evt);
            }
        });

        cancelAddTripBtn.setText("Cancel");
        cancelAddTripBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cancelAddTripBtnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout newTripPanelLayout = new javax.swing.GroupLayout(newTripPanel);
        newTripPanel.setLayout(newTripPanelLayout);
        newTripPanelLayout.setHorizontalGroup(
            newTripPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(newTripPanelLayout.createSequentialGroup()
                .addGap(31, 31, 31)
                .addGroup(newTripPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(newTripPanelLayout.createSequentialGroup()
                        .addComponent(jLabel15)
                        .addGap(23, 23, 23)
                        .addGroup(newTripPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(dateFromField, javax.swing.GroupLayout.PREFERRED_SIZE, 88, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(addTripBtn))
                        .addGroup(newTripPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(newTripPanelLayout.createSequentialGroup()
                                .addGap(68, 68, 68)
                                .addComponent(jLabel16)
                                .addGap(18, 18, 18)
                                .addComponent(dateToField, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(newTripPanelLayout.createSequentialGroup()
                                .addGap(58, 58, 58)
                                .addComponent(cancelAddTripBtn))))
                    .addGroup(newTripPanelLayout.createSequentialGroup()
                        .addGroup(newTripPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel13)
                            .addComponent(jLabel12))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(newTripPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(newTripPanelLayout.createSequentialGroup()
                                .addComponent(tittleField, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(52, 52, 52)
                                .addComponent(jLabel14)
                                .addGap(18, 18, 18)
                                .addComponent(priceField, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(destinationCmbBox, javax.swing.GroupLayout.PREFERRED_SIZE, 261, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(1465, Short.MAX_VALUE))
        );
        newTripPanelLayout.setVerticalGroup(
            newTripPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(newTripPanelLayout.createSequentialGroup()
                .addGap(26, 26, 26)
                .addGroup(newTripPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel12)
                    .addComponent(tittleField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel14)
                    .addComponent(priceField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(32, 32, 32)
                .addGroup(newTripPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(destinationCmbBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel13))
                .addGap(42, 42, 42)
                .addGroup(newTripPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel15)
                    .addComponent(jLabel16)
                    .addComponent(dateFromField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(dateToField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(62, 62, 62)
                .addGroup(newTripPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(addTripBtn)
                    .addComponent(cancelAddTripBtn))
                .addContainerGap(223, Short.MAX_VALUE))
        );

        getContentPane().add(newTripPanel, "card12");

        updateTripPanel.addComponentListener(new java.awt.event.ComponentAdapter() {
            public void componentShown(java.awt.event.ComponentEvent evt) {
                updateTripPanelComponentShown(evt);
            }
        });

        jLabel17.setText("Update Trip");

        jLabel18.setText("Tittle");

        jLabel19.setText("Destination");

        jLabel20.setText("Date From:");

        jLabel21.setText("Date To:");

        jLabel22.setText("Price");

        updDateFromField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updDateFromFieldActionPerformed(evt);
            }
        });

        updDateToField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updDateToFieldActionPerformed(evt);
            }
        });

        updPriceSpiner.setModel(new javax.swing.SpinnerNumberModel(0.0d, null, null, 1.0d));

        updateTripButton.setText("Update");
        updateTripButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updateTripButtonActionPerformed(evt);
            }
        });

        cancelTripUpd.setText("Cancel");
        cancelTripUpd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cancelTripUpdActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout updateTripPanelLayout = new javax.swing.GroupLayout(updateTripPanel);
        updateTripPanel.setLayout(updateTripPanelLayout);
        updateTripPanelLayout.setHorizontalGroup(
            updateTripPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(updateTripPanelLayout.createSequentialGroup()
                .addGroup(updateTripPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(updateTripPanelLayout.createSequentialGroup()
                        .addGap(199, 199, 199)
                        .addComponent(jLabel17))
                    .addGroup(updateTripPanelLayout.createSequentialGroup()
                        .addGap(41, 41, 41)
                        .addGroup(updateTripPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(updateTripPanelLayout.createSequentialGroup()
                                .addComponent(jLabel19)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(updTripDestCmb, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(updateTripPanelLayout.createSequentialGroup()
                                .addGroup(updateTripPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, updateTripPanelLayout.createSequentialGroup()
                                        .addComponent(jLabel18)
                                        .addGap(40, 40, 40)
                                        .addComponent(updTripTittleField, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, updateTripPanelLayout.createSequentialGroup()
                                        .addComponent(jLabel20)
                                        .addGap(18, 18, 18)
                                        .addComponent(updDateFromField, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(jLabel21)))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(updateTripPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(updDateToField, javax.swing.GroupLayout.PREFERRED_SIZE, 126, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(cancelTripUpd)
                                    .addGroup(updateTripPanelLayout.createSequentialGroup()
                                        .addGap(25, 25, 25)
                                        .addComponent(jLabel22)
                                        .addGap(18, 18, 18)
                                        .addComponent(updPriceSpiner, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE))))))
                    .addGroup(updateTripPanelLayout.createSequentialGroup()
                        .addGap(157, 157, 157)
                        .addComponent(updateTripButton)))
                .addContainerGap(1470, Short.MAX_VALUE))
        );
        updateTripPanelLayout.setVerticalGroup(
            updateTripPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(updateTripPanelLayout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addComponent(jLabel17)
                .addGap(18, 18, 18)
                .addGroup(updateTripPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel18)
                    .addComponent(jLabel22)
                    .addComponent(updTripTittleField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(updPriceSpiner, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(32, 32, 32)
                .addGroup(updateTripPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel19)
                    .addComponent(updTripDestCmb, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(38, 38, 38)
                .addGroup(updateTripPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel20)
                    .addComponent(jLabel21)
                    .addComponent(updDateFromField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(updDateToField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(44, 44, 44)
                .addGroup(updateTripPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(updateTripButton)
                    .addComponent(cancelTripUpd))
                .addContainerGap(217, Short.MAX_VALUE))
        );

        getContentPane().add(updateTripPanel, "card13");

        logedInAgent.addComponentListener(new java.awt.event.ComponentAdapter() {
            public void componentShown(java.awt.event.ComponentEvent evt) {
                logedInAgentComponentShown(evt);
            }
        });

        jLabel28.setText("Name");

        jLabel29.setText("Surname");

        jLabel30.setText("Login Username");

        jLabel31.setText("Password");

        accName.setEnabled(false);
        accName.setVerifyInputWhenFocusTarget(false);

        accSurname.setEnabled(false);

        accUsnm.setEnabled(false);

        accPwd.setEnabled(false);

        modifyAccData.setText("Modify");
        modifyAccData.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                modifyAccDataActionPerformed(evt);
            }
        });

        deleteAccountBtn.setText("Delete Account");
        deleteAccountBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteAccountBtnActionPerformed(evt);
            }
        });

        jLabel32.setFont(new java.awt.Font("Times New Roman", 2, 10)); // NOI18N
        jLabel32.setForeground(new java.awt.Color(102, 102, 102));
        jLabel32.setText("Password maximum length is 11");

        updateLoginDataBtn.setText("Update");
        updateLoginDataBtn.setEnabled(false);
        updateLoginDataBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updateLoginDataBtnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout logedInAgentLayout = new javax.swing.GroupLayout(logedInAgent);
        logedInAgent.setLayout(logedInAgentLayout);
        logedInAgentLayout.setHorizontalGroup(
            logedInAgentLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(logedInAgentLayout.createSequentialGroup()
                .addGap(29, 29, 29)
                .addGroup(logedInAgentLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(logedInAgentLayout.createSequentialGroup()
                        .addComponent(modifyAccData)
                        .addGap(32, 32, 32)
                        .addComponent(updateLoginDataBtn)
                        .addGap(46, 46, 46)
                        .addComponent(deleteAccountBtn)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(logedInAgentLayout.createSequentialGroup()
                        .addGroup(logedInAgentLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel29)
                            .addComponent(jLabel30)
                            .addComponent(jLabel28)
                            .addComponent(jLabel31))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(logedInAgentLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel32)
                            .addGroup(logedInAgentLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addComponent(accName, javax.swing.GroupLayout.DEFAULT_SIZE, 86, Short.MAX_VALUE)
                                .addComponent(accSurname, javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(accUsnm, javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(accPwd)))
                        .addGap(631, 631, 631))))
        );
        logedInAgentLayout.setVerticalGroup(
            logedInAgentLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(logedInAgentLayout.createSequentialGroup()
                .addGap(33, 33, 33)
                .addGroup(logedInAgentLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(logedInAgentLayout.createSequentialGroup()
                        .addComponent(jLabel28)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel29))
                    .addGroup(logedInAgentLayout.createSequentialGroup()
                        .addComponent(accName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(accSurname, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(18, 18, 18)
                .addGroup(logedInAgentLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel30)
                    .addComponent(accUsnm, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(logedInAgentLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel31)
                    .addComponent(accPwd, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel32)
                .addGap(12, 12, 12)
                .addGroup(logedInAgentLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(modifyAccData)
                    .addComponent(deleteAccountBtn)
                    .addComponent(updateLoginDataBtn))
                .addContainerGap(254, Short.MAX_VALUE))
        );

        getContentPane().add(logedInAgent, "card14");

        newAccount.setTitle("New Account");
        newAccount.setVisible(true);
        newAccount.addComponentListener(new java.awt.event.ComponentAdapter() {
            public void componentShown(java.awt.event.ComponentEvent evt) {
                newAccountComponentShown(evt);
            }
        });

        jLabel33.setText("Username");

        jLabel34.setText("Password");

        jLabel35.setText("Agent");

        addNewAccBtn.setText("Add");
        addNewAccBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addNewAccBtnActionPerformed(evt);
            }
        });

        cancelNewAccBtn.setText("Cancel");
        cancelNewAccBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cancelNewAccBtnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout newAccountLayout = new javax.swing.GroupLayout(newAccount.getContentPane());
        newAccount.getContentPane().setLayout(newAccountLayout);
        newAccountLayout.setHorizontalGroup(
            newAccountLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(newAccountLayout.createSequentialGroup()
                .addGroup(newAccountLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(newAccountLayout.createSequentialGroup()
                        .addGap(76, 76, 76)
                        .addGroup(newAccountLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(newAccountLayout.createSequentialGroup()
                                .addComponent(jLabel33)
                                .addGap(18, 18, 18)
                                .addComponent(newAccUsernameField, javax.swing.GroupLayout.PREFERRED_SIZE, 83, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(newAccountLayout.createSequentialGroup()
                                .addGroup(newAccountLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel34)
                                    .addComponent(jLabel35))
                                .addGap(18, 18, 18)
                                .addGroup(newAccountLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(agentCmb, javax.swing.GroupLayout.PREFERRED_SIZE, 142, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(newAccPwdField, javax.swing.GroupLayout.PREFERRED_SIZE, 96, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                    .addGroup(newAccountLayout.createSequentialGroup()
                        .addGap(123, 123, 123)
                        .addComponent(addNewAccBtn)
                        .addGap(70, 70, 70)
                        .addComponent(cancelNewAccBtn)))
                .addContainerGap(1551, Short.MAX_VALUE))
        );
        newAccountLayout.setVerticalGroup(
            newAccountLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(newAccountLayout.createSequentialGroup()
                .addGap(39, 39, 39)
                .addGroup(newAccountLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel33)
                    .addComponent(newAccUsernameField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(20, 20, 20)
                .addGroup(newAccountLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel34)
                    .addComponent(newAccPwdField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(newAccountLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel35)
                    .addComponent(agentCmb, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(41, 41, 41)
                .addGroup(newAccountLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(addNewAccBtn)
                    .addComponent(cancelNewAccBtn))
                .addContainerGap(237, Short.MAX_VALUE))
        );

        getContentPane().add(newAccount, "card15");

        jLabel37.setText("Name");

        jLabel38.setText("Surname");

        jLabel39.setText("Birthdate");

        addTravellerBtn.setBackground(new java.awt.Color(0, 51, 255));
        addTravellerBtn.setForeground(new java.awt.Color(255, 255, 255));
        addTravellerBtn.setText("Add");
        addTravellerBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addTravellerBtnActionPerformed(evt);
            }
        });

        cancelnewTrav.setBackground(new java.awt.Color(255, 153, 0));
        cancelnewTrav.setText("Cancel");
        cancelnewTrav.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cancelnewTravActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout newTravellerPanelLayout = new javax.swing.GroupLayout(newTravellerPanel);
        newTravellerPanel.setLayout(newTravellerPanelLayout);
        newTravellerPanelLayout.setHorizontalGroup(
            newTravellerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(newTravellerPanelLayout.createSequentialGroup()
                .addGroup(newTravellerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(newTravellerPanelLayout.createSequentialGroup()
                        .addGap(56, 56, 56)
                        .addGroup(newTravellerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(newTravellerPanelLayout.createSequentialGroup()
                                .addComponent(jLabel39)
                                .addGap(18, 18, 18)
                                .addComponent(newTravBdate, javax.swing.GroupLayout.PREFERRED_SIZE, 78, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(newTravellerPanelLayout.createSequentialGroup()
                                .addGroup(newTravellerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel38)
                                    .addComponent(jLabel37))
                                .addGap(18, 18, 18)
                                .addGroup(newTravellerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(newTravSurname)
                                    .addComponent(newTravName)))))
                    .addGroup(newTravellerPanelLayout.createSequentialGroup()
                        .addGap(93, 93, 93)
                        .addComponent(addTravellerBtn)
                        .addGap(18, 18, 18)
                        .addComponent(cancelnewTrav)))
                .addContainerGap(1649, Short.MAX_VALUE))
        );
        newTravellerPanelLayout.setVerticalGroup(
            newTravellerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(newTravellerPanelLayout.createSequentialGroup()
                .addGap(41, 41, 41)
                .addGroup(newTravellerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(newTravName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel37))
                .addGap(18, 18, 18)
                .addGroup(newTravellerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel38)
                    .addComponent(newTravSurname, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(newTravellerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel39)
                    .addComponent(newTravBdate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 267, Short.MAX_VALUE)
                .addGroup(newTravellerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(addTravellerBtn)
                    .addComponent(cancelnewTrav))
                .addGap(41, 41, 41))
        );

        getContentPane().add(newTravellerPanel, "card16");

        updateTravellerPanel.addComponentListener(new java.awt.event.ComponentAdapter() {
            public void componentShown(java.awt.event.ComponentEvent evt) {
                updateTravellerPanelComponentShown(evt);
            }
        });

        jLabel40.setText("Name");

        jLabel41.setText("Surname");

        jLabel42.setText("Birthday");

        updTravSurname.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updTravSurnameActionPerformed(evt);
            }
        });

        updateTravBtn.setText("Update");
        updateTravBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updateTravBtnActionPerformed(evt);
            }
        });

        cancelTravBtn.setText("Cancel");
        cancelTravBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cancelTravBtnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout updateTravellerPanelLayout = new javax.swing.GroupLayout(updateTravellerPanel);
        updateTravellerPanel.setLayout(updateTravellerPanelLayout);
        updateTravellerPanelLayout.setHorizontalGroup(
            updateTravellerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(updateTravellerPanelLayout.createSequentialGroup()
                .addGap(84, 84, 84)
                .addGroup(updateTravellerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(updateTravellerPanelLayout.createSequentialGroup()
                        .addComponent(updateTravBtn)
                        .addGap(26, 26, 26)
                        .addComponent(cancelTravBtn))
                    .addGroup(updateTravellerPanelLayout.createSequentialGroup()
                        .addGroup(updateTravellerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel41)
                            .addComponent(jLabel40)
                            .addComponent(jLabel42))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(updateTravellerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(updTravBdate, javax.swing.GroupLayout.DEFAULT_SIZE, 509, Short.MAX_VALUE)
                            .addComponent(updTravSurname, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(updTravName, javax.swing.GroupLayout.Alignment.LEADING))))
                .addGap(156, 156, 156))
        );
        updateTravellerPanelLayout.setVerticalGroup(
            updateTravellerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(updateTravellerPanelLayout.createSequentialGroup()
                .addGap(39, 39, 39)
                .addGroup(updateTravellerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel40)
                    .addComponent(updTravName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(26, 26, 26)
                .addGroup(updateTravellerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel41)
                    .addComponent(updTravSurname, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(22, 22, 22)
                .addGroup(updateTravellerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel42)
                    .addComponent(updTravBdate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(30, 30, 30)
                .addGroup(updateTravellerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(updateTravBtn)
                    .addComponent(cancelTravBtn))
                .addContainerGap(112, Short.MAX_VALUE))
        );

        getContentPane().add(updateTravellerPanel, "card17");

        welcomePanel.setBackground(new java.awt.Color(255, 255, 255));
        welcomePanel.setMaximumSize(new java.awt.Dimension(700, 400));
        welcomePanel.setMinimumSize(new java.awt.Dimension(700, 400));
        welcomePanel.setPreferredSize(new java.awt.Dimension(700, 400));
        welcomePanel.addComponentListener(new java.awt.event.ComponentAdapter() {
            public void componentShown(java.awt.event.ComponentEvent evt) {
                welcomePanelComponentShown(evt);
            }
        });

        welcomeLabel.setBackground(new java.awt.Color(204, 204, 255));
        welcomeLabel.setFont(new java.awt.Font("Gill Sans MT", 1, 18)); // NOI18N
        welcomeLabel.setForeground(new java.awt.Color(255, 51, 153));
        welcomeLabel.setIcon(new javax.swing.ImageIcon(getClass().getResource("/travelagencymanagementsystem/resources/welcome.jpg"))); // NOI18N
        welcomeLabel.setToolTipText("Welcome");

        continueButton.setBackground(new java.awt.Color(102, 102, 255));
        continueButton.setForeground(new java.awt.Color(255, 255, 255));
        continueButton.setText("Continue");
        continueButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                continueButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout welcomePanelLayout = new javax.swing.GroupLayout(welcomePanel);
        welcomePanel.setLayout(welcomePanelLayout);
        welcomePanelLayout.setHorizontalGroup(
            welcomePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(welcomePanelLayout.createSequentialGroup()
                .addGroup(welcomePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(welcomePanelLayout.createSequentialGroup()
                        .addGap(101, 101, 101)
                        .addComponent(welcomeLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 650, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(welcomePanelLayout.createSequentialGroup()
                        .addGap(361, 361, 361)
                        .addComponent(continueButton)))
                .addContainerGap(125, Short.MAX_VALUE))
        );
        welcomePanelLayout.setVerticalGroup(
            welcomePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(welcomePanelLayout.createSequentialGroup()
                .addGap(12, 12, 12)
                .addComponent(welcomeLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 385, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(continueButton)
                .addContainerGap(42, Short.MAX_VALUE))
        );

        getContentPane().add(welcomePanel, "card2");

        destinationMenu.setText("Destinations");
        destinationMenu.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                destinationMenuMouseClicked(evt);
            }
        });
        mainMenu.add(destinationMenu);

        tripMenu.setText("Trip");
        tripMenu.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tripMenuMouseClicked(evt);
            }
        });
        mainMenu.add(tripMenu);

        travellerMenu.setText("Traveller");
        travellerMenu.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                travellerMenuMouseClicked(evt);
            }
        });
        mainMenu.add(travellerMenu);

        agentMenu.setText("Agents");
        agentMenu.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                agentMenuMouseClicked(evt);
            }
        });
        mainMenu.add(agentMenu);

        reserve.setText("Reserve");
        reserve.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                reserveMouseClicked(evt);
            }
        });
        reserve.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                reserveActionPerformed(evt);
            }
        });
        mainMenu.add(reserve);

        accomodationMenu.setText("Accomodations");
        accomodationMenu.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                accomodationMenuMouseClicked(evt);
            }
        });
        mainMenu.add(accomodationMenu);

        myAccountMenu.setText("My Account");

        editAccountMenuItem.setText("Edit");
        editAccountMenuItem.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                editAccountMenuItemMouseClicked(evt);
            }
        });
        editAccountMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                editAccountMenuItemActionPerformed(evt);
            }
        });
        myAccountMenu.add(editAccountMenuItem);

        logoutMenuItem.setText("LogOut");
        logoutMenuItem.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                logoutMenuItemMouseClicked(evt);
            }
        });
        logoutMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                logoutMenuItemActionPerformed(evt);
            }
        });
        myAccountMenu.add(logoutMenuItem);

        mainMenu.add(myAccountMenu);

        setJMenuBar(mainMenu);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private int helpId;
    private static String dateFormatRegex = "^(3[01]|[12][0-9]|0[1-9])-(1[0-2]|0[1-9])-[0-9]{4}$";
    private void passwordFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_passwordFieldActionPerformed

    }//GEN-LAST:event_passwordFieldActionPerformed

    private void logInBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_logInBtnActionPerformed
        String username = usernameField.getText();
        String password = passwordField.getText();
        System.out.println(username + " " + password);
        if ((username != null && !username.trim().equals("")) && (password != null && !password.trim().equals(""))) {
            LoginDAO dao = new LoginDAO();
            System.out.println("Deri ktu");
            try {
                ArrayList<Login> logins = dao.showLoginAccounts();
                password = "qwert" + password + "asdf";
                Boolean found = false;
                for (Login acc : logins) {
                    System.out.println(acc + " dhe passw" + acc.getPassword());
                    if (acc.getUsername().equals(username) && acc.getPassword().equals("qwert" + password + "asdf")) {
                        //   helpId = acc.getAgent().getN_idAgent();
                        found = true;
                        this.mainMenu.setVisible(true);
                        this.welcomePanel.setVisible(false);
                        this.logInPanel.setVisible(false);
                        this.destinationPanel.setVisible(true);
                        this.tripPanel.setVisible(false);
                        this.travellerPanel.setVisible(false);
                        this.newTravellerPanel.setVisible(false);
                        this.updateTravellerPanel.setVisible(false);
                        this.accomodationPanel.setVisible(false);
                        this.agentPanel.setVisible(false);
                        this.reservationPanel.setVisible(false);
                        this.newReservationPanel.setVisible(false);
                        this.updateDestPanel.setVisible(false);
                        this.newTripPanel.setVisible(false);
                        this.updateTripPanel.setVisible(false);
                        this.modifyAgentPanel.setVisible(false);
                        this.logedInAgent.setVisible(false);
                        break;
                    }

                }
                if (!found) {
                    ImageIcon icon = new ImageIcon("src/travelagencymanagementsystem/resources/tryagain.jpg");
                    JOptionPane.showMessageDialog(null, "Incorrect data", "Failed Login", 0, icon);
                    this.logInPanel.setVisible(true);
                    usernameField.setText("");
                    passwordField.setText("");
                }

            } catch (Exception e) {
                e.printStackTrace();
            }
        } else {
            ImageIcon icon = new ImageIcon("src/travelagencymanagementsystem/resources/tryagain.jpg");
            JOptionPane.showMessageDialog(null, "Please fill the fields", "Failed Login", 0, icon);
            this.logInPanel.setVisible(true);
            usernameField.setText("");
            passwordField.setText("");

        }
        
    }//GEN-LAST:event_logInBtnActionPerformed

    private void continueButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_continueButtonActionPerformed
        this.welcomePanel.setVisible(false);
        this.logInPanel.setVisible(true);
        this.destinationPanel.setVisible(false);
        this.tripPanel.setVisible(false);
        this.travellerPanel.setVisible(false);
        this.newTravellerPanel.setVisible(false);
        this.updateTravellerPanel.setVisible(false);
        this.accomodationPanel.setVisible(false);
        this.agentPanel.setVisible(false);
        this.reservationPanel.setVisible(false);
        this.newReservationPanel.setVisible(false);
        this.updateDestPanel.setVisible(false);
        this.newTripPanel.setVisible(false);
        this.updateTripPanel.setVisible(false);
        this.modifyAgentPanel.setVisible(false);
        this.logedInAgent.setVisible(false);
    }//GEN-LAST:event_continueButtonActionPerformed

    private void destinationMenuMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_destinationMenuMouseClicked
        this.welcomePanel.setVisible(false);
        this.logInPanel.setVisible(false);
        this.destinationPanel.setVisible(true);
        this.tripPanel.setVisible(false);
        this.travellerPanel.setVisible(false);

        this.newTravellerPanel.setVisible(false);
        this.updateTravellerPanel.setVisible(false);
        this.accomodationPanel.setVisible(false);
        this.agentPanel.setVisible(false);
        this.reservationPanel.setVisible(false);
        this.newReservationPanel.setVisible(false);
        this.newDestPanel.setVisible(false);
        this.updateDestPanel.setVisible(false);
        this.newTripPanel.setVisible(false);
        this.updateTripPanel.setVisible(false);
        this.modifyAgentPanel.setVisible(false);
        this.logedInAgent.setVisible(false);
    }//GEN-LAST:event_destinationMenuMouseClicked

    private void tripMenuMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tripMenuMouseClicked
        this.welcomePanel.setVisible(false);
        this.logInPanel.setVisible(false);
        this.destinationPanel.setVisible(false);
        this.tripPanel.setVisible(true);
        this.travellerPanel.setVisible(false);
        this.newTravellerPanel.setVisible(false);
        this.updateTravellerPanel.setVisible(false);
        this.accomodationPanel.setVisible(false);
        this.agentPanel.setVisible(false);
        this.reservationPanel.setVisible(false);
        this.newReservationPanel.setVisible(false);
        this.updateDestPanel.setVisible(false);
        this.newTripPanel.setVisible(false);
        this.updateTripPanel.setVisible(false);
        this.modifyAgentPanel.setVisible(false);
        this.logedInAgent.setVisible(false);
    }//GEN-LAST:event_tripMenuMouseClicked

    private void travellerMenuMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_travellerMenuMouseClicked
        this.welcomePanel.setVisible(false);
        this.logInPanel.setVisible(false);
        this.destinationPanel.setVisible(false);
        this.tripPanel.setVisible(false);
        this.travellerPanel.setVisible(true);
        this.newTravellerPanel.setVisible(false);
        this.updateTravellerPanel.setVisible(false);
        this.accomodationPanel.setVisible(false);
        this.agentPanel.setVisible(false);
        this.reservationPanel.setVisible(false);
        this.newReservationPanel.setVisible(false);
        this.updateDestPanel.setVisible(false);
        this.newTripPanel.setVisible(false);
        this.updateTripPanel.setVisible(false);
        this.modifyAgentPanel.setVisible(false);
        this.logedInAgent.setVisible(false);
    }//GEN-LAST:event_travellerMenuMouseClicked

    private void agentMenuMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_agentMenuMouseClicked
        this.welcomePanel.setVisible(false);
        this.logInPanel.setVisible(false);
        this.destinationPanel.setVisible(false);
        this.tripPanel.setVisible(false);
        this.travellerPanel.setVisible(false);
        this.newTravellerPanel.setVisible(false);
        this.updateTravellerPanel.setVisible(false);
        this.accomodationPanel.setVisible(false);
        this.agentPanel.setVisible(true);
        this.reservationPanel.setVisible(false);
        this.newReservationPanel.setVisible(false);
        this.updateDestPanel.setVisible(false);
        this.newTripPanel.setVisible(false);
        this.updateTripPanel.setVisible(false);
        this.modifyAgentPanel.setVisible(true);
        this.logedInAgent.setVisible(false);
    }//GEN-LAST:event_agentMenuMouseClicked

    private void accomodationMenuMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_accomodationMenuMouseClicked
        this.welcomePanel.setVisible(false);
        this.logInPanel.setVisible(false);
        this.destinationPanel.setVisible(false);
        this.tripPanel.setVisible(false);
        this.travellerPanel.setVisible(false);
        this.newTravellerPanel.setVisible(false);
        this.updateTravellerPanel.setVisible(false);
        this.accomodationPanel.setVisible(true);
        this.agentPanel.setVisible(false);
        this.reservationPanel.setVisible(false);
        this.newReservationPanel.setVisible(false);
        this.updateDestPanel.setVisible(false);
        this.newTripPanel.setVisible(false);
        this.updateTripPanel.setVisible(false);
        this.modifyAgentPanel.setVisible(false);
        this.logedInAgent.setVisible(false);
        this.logedInAgent.setVisible(false);
    }//GEN-LAST:event_accomodationMenuMouseClicked

    private void updateDestBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_updateDestBtnActionPerformed
        this.mainMenu.setVisible(false);
        this.welcomePanel.setVisible(false);
        this.logInPanel.setVisible(false);
        this.destinationPanel.setVisible(false);
        this.tripPanel.setVisible(false);
        this.travellerPanel.setVisible(false);
        this.newTravellerPanel.setVisible(false);
        this.updateTravellerPanel.setVisible(false);
        this.accomodationPanel.setVisible(false);
        this.agentPanel.setVisible(false);
        this.reservationPanel.setVisible(false);
        this.newReservationPanel.setVisible(false);
        this.newDestPanel.setVisible(false);
        this.updateDestPanel.setVisible(true);
        this.newTripPanel.setVisible(false);
        this.updateTripPanel.setVisible(false);
        this.modifyAgentPanel.setVisible(false);
        this.logedInAgent.setVisible(false);
    }//GEN-LAST:event_updateDestBtnActionPerformed

    private void deleteDestBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteDestBtnActionPerformed

        int index = destinationsList.getSelectedIndex();
        Destination d = (Destination) (Object) destinationsList.getModel().getElementAt(index);

        try {
            DestinationDAO dao = new DestinationDAO();
            Boolean answ = dao.deleteDestination(d);
            if (answ == true) {
                ImageIcon icon = new ImageIcon("src/travelagencymanagementsystem/resources/success.png");
                JOptionPane.showMessageDialog(null, "Destination was updated successfully", "Success", 0, icon);
                //rishfaq listen e update-uar
                DefaultListModel dm = new DefaultListModel();
                ArrayList<Destination> destinations = dao.getAllDestinations();
                for (Destination destIter : destinations) {

                    dm.addElement(destIter);
                }
                destinationsList.setModel(dm);

                deleteDestBtn.setEnabled(false);
                updateDestBtn.setEnabled(false);
            } else {
                ImageIcon icon = new ImageIcon("src/travelagencymanagementsystem/resources/deletionNotAllowed.jpg");
                JOptionPane.showMessageDialog(null, "The destination is in use", "Failed", 0, icon);
                deleteDestBtn.setEnabled(false);
                updateDestBtn.setEnabled(false);
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
    }//GEN-LAST:event_deleteDestBtnActionPerformed

    private void destinationPanelComponentShown(java.awt.event.ComponentEvent evt) {//GEN-FIRST:event_destinationPanelComponentShown
        // this.attracDescArea.setVisible(false);
        try {
            DestinationDAO dao = new DestinationDAO();
            ArrayList<Destination> destinations = dao.getAllDestinations();
            DefaultListModel dm = new DefaultListModel();
            destinationsList.requestFocus();
            int index = destinationsList.getSelectedIndex();
            if (index >= 0 && index < destinationsList.getModel().getSize()) {
                deleteDestBtn.setEnabled(true);
                updateDestBtn.setEnabled(true);
            }
            for (Destination d : destinations) {
                dm.addElement(d);
            }
            destinationsList.setModel(dm);
        } catch (Exception e) {
            e.printStackTrace();
        }
    }//GEN-LAST:event_destinationPanelComponentShown

    private void newDestBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_newDestBtnActionPerformed
        this.mainMenu.setVisible(false);
        this.welcomePanel.setVisible(false);
        this.logInPanel.setVisible(false);
        this.destinationPanel.setVisible(false);
        this.tripPanel.setVisible(false);
        this.travellerPanel.setVisible(false);
        this.newTravellerPanel.setVisible(false);
        this.updateTravellerPanel.setVisible(false);
        this.accomodationPanel.setVisible(false);
        this.agentPanel.setVisible(false);
        this.reservationPanel.setVisible(false);
        this.newReservationPanel.setVisible(false);
        this.newDestPanel.setVisible(true);
        this.updateDestPanel.setVisible(false);
        this.newTripPanel.setVisible(false);
        this.updateTripPanel.setVisible(false);
        this.modifyAgentPanel.setVisible(false);
        this.logedInAgent.setVisible(false);
    }//GEN-LAST:event_newDestBtnActionPerformed

    private void cancelDestBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cancelDestBtnActionPerformed
        this.mainMenu.setVisible(true);
        this.welcomePanel.setVisible(false);
        this.logInPanel.setVisible(false);
        this.destinationPanel.setVisible(true);
        this.tripPanel.setVisible(false);
        this.travellerPanel.setVisible(false);
        this.newTravellerPanel.setVisible(false);
        this.updateTravellerPanel.setVisible(false);
        this.accomodationPanel.setVisible(false);
        this.agentPanel.setVisible(false);
        this.reservationPanel.setVisible(false);
        this.newReservationPanel.setVisible(false);
        this.newDestPanel.setVisible(false);
        this.updateDestPanel.setVisible(false);
        this.newTripPanel.setVisible(false);
        this.updateTripPanel.setVisible(false);
        this.modifyAgentPanel.setVisible(false);
        this.logedInAgent.setVisible(false);
    }//GEN-LAST:event_cancelDestBtnActionPerformed

    private void addDestBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addDestBtnActionPerformed

        Destination newDest = new Destination();
        if (stateField.getText() != null && !stateField.getText().trim().equals("")
                && cityField.getText() != null && !cityField.getText().trim().equals("")
                && newDestAttracArea.getText() != null && !newDestAttracArea.getText().trim().equals("")) {
            newDest.setT_state(stateField.getText());
            newDest.setT_city(cityField.getText());
            newDest.setAttraction(newDestAttracArea.getText());

            try {
                DestinationDAO dao = new DestinationDAO();
                Boolean answ = dao.insertDestination(newDest);
                if (answ == true) {
                    ImageIcon icon = new ImageIcon("src/travelagencymanagementsystem/resources/success.png");
                    JOptionPane.showMessageDialog(null, "New Destination was added successfully", "Success", 0, icon);
                    this.mainMenu.setVisible(true);
                    this.welcomePanel.setVisible(false);
                    this.logInPanel.setVisible(false);
                    this.destinationPanel.setVisible(true);
                    this.tripPanel.setVisible(false);
                    this.travellerPanel.setVisible(false);
                    this.newTravellerPanel.setVisible(false);
                    this.updateTravellerPanel.setVisible(false);
                    this.accomodationPanel.setVisible(false);
                    this.agentPanel.setVisible(false);
                    this.reservationPanel.setVisible(false);
                    this.newReservationPanel.setVisible(false);
                    this.newDestPanel.setVisible(false);
                    this.updateDestPanel.setVisible(false);
                    this.newTripPanel.setVisible(false);
                    this.updateTripPanel.setVisible(false);
                    this.modifyAgentPanel.setVisible(false);
                    this.logedInAgent.setVisible(false);
                } else {
                    JOptionPane.showMessageDialog(null, "Something went wrong. Try again");
                }
            } catch (Exception e) {
                e.printStackTrace();
            }
        } else {
            ImageIcon icon = new ImageIcon("src/travelagencymanagementsystem/resources/tryagain.jpg");
            JOptionPane.showMessageDialog(null, "Please fill the fields", "Empty Fields", 0, icon);
        }
    }//GEN-LAST:event_addDestBtnActionPerformed

    private void cancelDestUpdBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cancelDestUpdBtnActionPerformed
        this.mainMenu.setVisible(true);
        this.welcomePanel.setVisible(false);
        this.logInPanel.setVisible(false);
        this.destinationPanel.setVisible(true);
        this.tripPanel.setVisible(false);
        this.travellerPanel.setVisible(false);
        this.newTravellerPanel.setVisible(false);
        this.updateTravellerPanel.setVisible(false);
        this.accomodationPanel.setVisible(false);
        this.agentPanel.setVisible(false);
        this.reservationPanel.setVisible(false);
        this.newReservationPanel.setVisible(false);
        this.newDestPanel.setVisible(false);
        this.updateDestPanel.setVisible(false);
        this.newTripPanel.setVisible(false);
        this.updateTripPanel.setVisible(false);
        this.logedInAgent.setVisible(false);
    }//GEN-LAST:event_cancelDestUpdBtnActionPerformed

    private void destinationsListMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_destinationsListMouseClicked
        destinationsList.requestFocus();
        int index = destinationsList.getSelectedIndex();
        if (index >= 0 && index < destinationsList.getModel().getSize()) {
            Destination d = (Destination) (Object) destinationsList.getModel().getElementAt(index);
            attracDescArea.setEditable(true);
            attracDescArea.setText(d.getAttraction());
            //attracDescArea.setVisible(true);
            updateDestBtn.setEnabled(true);
            deleteDestBtn.setEnabled(true);
        }
    }//GEN-LAST:event_destinationsListMouseClicked

    private void updateDestPanelComponentShown(java.awt.event.ComponentEvent evt) {//GEN-FIRST:event_updateDestPanelComponentShown
        int index = destinationsList.getSelectedIndex();
        Destination d = (Destination) (Object) destinationsList.getModel().getElementAt(index);

        stateField1.setText(d.getT_state());
        cityField1.setText(d.getT_city());
        updtDestAttracArea.setText(d.getAttraction());
    }//GEN-LAST:event_updateDestPanelComponentShown

    private void updateDestinationActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_updateDestinationActionPerformed
        int index = destinationsList.getSelectedIndex();
        Destination d = (Destination) (Object) destinationsList.getModel().getElementAt(index);

        if (stateField1.getText() != null && !stateField1.getText().trim().equals("")
                && cityField1.getText() != null && !cityField1.getText().trim().equals("")
                && updtDestAttracArea.getText() != null && !updtDestAttracArea.getText().trim().equals("")) {

            d.setT_city(cityField1.getText());
            d.setT_state(stateField1.getText());
            d.setAttraction(updtDestAttracArea.getText());
            try {
                DestinationDAO dao = new DestinationDAO();
                Boolean answ = dao.updateDestination(d);
                if (answ == true) {
                    ImageIcon icon = new ImageIcon("src/travelagencymanagementsystem/resources/success.png");
                    JOptionPane.showMessageDialog(null, "Destination was updated successfully", "Success", 0, icon);
                    this.mainMenu.setVisible(true);
                    this.welcomePanel.setVisible(false);
                    this.logInPanel.setVisible(false);
                    this.destinationPanel.setVisible(true);
                    this.tripPanel.setVisible(false);
                    this.travellerPanel.setVisible(false);
                    this.newTravellerPanel.setVisible(false);
                    this.updateTravellerPanel.setVisible(false);
                    this.accomodationPanel.setVisible(false);
                    this.agentPanel.setVisible(false);
                    this.reservationPanel.setVisible(false);
                    this.newReservationPanel.setVisible(false);
                    this.newDestPanel.setVisible(false);
                    this.updateDestPanel.setVisible(false);
                    this.newTripPanel.setVisible(false);
                    this.updateTripPanel.setVisible(false);
                    this.modifyAgentPanel.setVisible(false);
                    this.logedInAgent.setVisible(false);
                    deleteDestBtn.setEnabled(false);
                    updateDestBtn.setEnabled(false);
                } else {
                    JOptionPane.showMessageDialog(null, "Something went wrong. Try again");
                    deleteDestBtn.setEnabled(false);
                    updateDestBtn.setEnabled(false);
                }
            } catch (Exception e) {
                e.printStackTrace();
            }
        } else {
            ImageIcon icon = new ImageIcon("src/travelagencymanagementsystem/resources/tryagain.jpg");
            JOptionPane.showMessageDialog(null, "Please fill the fields", "Empty Fields", 0, icon);
        }

    }//GEN-LAST:event_updateDestinationActionPerformed

    private void welcomePanelComponentShown(java.awt.event.ComponentEvent evt) {//GEN-FIRST:event_welcomePanelComponentShown
        this.mainMenu.setVisible(false);
        this.welcomePanel.setVisible(true);
        this.logInPanel.setVisible(false);
        this.destinationPanel.setVisible(false);
        this.tripPanel.setVisible(false);
        this.travellerPanel.setVisible(false);
        this.newTravellerPanel.setVisible(false);
        this.updateTravellerPanel.setVisible(false);
        this.accomodationPanel.setVisible(false);
        this.agentPanel.setVisible(false);
        this.reservationPanel.setVisible(false);
        this.newReservationPanel.setVisible(false);
        this.newDestPanel.setVisible(false);
        this.updateDestPanel.setVisible(false);
        this.newTripPanel.setVisible(false);
        this.updateTripPanel.setVisible(false);
        this.modifyAgentPanel.setVisible(false);
        this.logedInAgent.setVisible(false);
    }//GEN-LAST:event_welcomePanelComponentShown

    private void formComponentShown(java.awt.event.ComponentEvent evt) {//GEN-FIRST:event_formComponentShown
        this.mainMenu.setVisible(false);
        this.welcomePanel.setVisible(true);
        this.logInPanel.setVisible(false);
        this.destinationPanel.setVisible(false);
        this.tripPanel.setVisible(false);
        this.travellerPanel.setVisible(false);
        this.newTravellerPanel.setVisible(false);
        this.updateTravellerPanel.setVisible(false);
        this.accomodationPanel.setVisible(false);
        this.agentPanel.setVisible(false);
        this.reservationPanel.setVisible(false);
        this.newReservationPanel.setVisible(false);
        this.newDestPanel.setVisible(false);
        this.updateDestPanel.setVisible(false);
        this.newTripPanel.setVisible(false);
        this.updateTripPanel.setVisible(false);
        this.modifyAgentPanel.setVisible(false);
        this.logedInAgent.setVisible(false);
    }//GEN-LAST:event_formComponentShown

    private void tripPanelComponentShown(java.awt.event.ComponentEvent evt) {//GEN-FIRST:event_tripPanelComponentShown
        try {
            TripDAO dao = new TripDAO();
            ArrayList<Trip> trips = dao.getAllTrips();
            DefaultListModel dm = new DefaultListModel();

            tripList.requestFocus();
            int index = tripList.getSelectedIndex();
            if (index >= 0 && index < tripList.getModel().getSize()) {
                deleteTripBtn.setEnabled(true);
                updateTripBtn.setEnabled(true);
            }
            for (Trip d : trips) {
                dm.addElement(d);
            }
            tripList.setModel(dm);
        } catch (Exception e) {
            e.printStackTrace();
        }
    }//GEN-LAST:event_tripPanelComponentShown

    private void deleteTripBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteTripBtnActionPerformed
        int index = tripList.getSelectedIndex();
        Trip d = (Trip) (Object) tripList.getModel().getElementAt(index);
        TripDAO dao = new TripDAO();
        try {

            Boolean answ = dao.deleteTrip(d);
            if (answ == true) {
                ImageIcon icon = new ImageIcon("src/travelagencymanagementsystem/resources/success.png");
                JOptionPane.showMessageDialog(null, "Trip deleted successfully", "Success", 0, icon);
                //rishfaq listen e update-uar

                ArrayList<Trip> trips = dao.getAllTrips();
                DefaultListModel dm = new DefaultListModel();

                for (Trip tr : trips) {
                    dm.addElement(tr);
                }
                tripList.revalidate();
                tripList.repaint();
                tripList.setModel(dm);
                deleteTripBtn.setEnabled(false);
                updateTripBtn.setEnabled(false);
            } else {
                ImageIcon icon = new ImageIcon("src/travelagencymanagementsystem/resources/deletionNotAllowed.jpg");
                JOptionPane.showMessageDialog(null, "Trip is in use", "Failed", 0, icon);
                deleteTripBtn.setEnabled(false);
                updateTripBtn.setEnabled(false);
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
    }//GEN-LAST:event_deleteTripBtnActionPerformed

    private void tittleFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tittleFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_tittleFieldActionPerformed

    private void newTripActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_newTripActionPerformed
        this.mainMenu.setVisible(false);
        this.welcomePanel.setVisible(false);
        this.logInPanel.setVisible(false);
        this.destinationPanel.setVisible(false);
        this.tripPanel.setVisible(false);
        this.travellerPanel.setVisible(false);
        this.newTravellerPanel.setVisible(false);
        this.updateTravellerPanel.setVisible(false);
        this.accomodationPanel.setVisible(false);
        this.agentPanel.setVisible(false);
        this.reservationPanel.setVisible(false);
        this.newReservationPanel.setVisible(false);
        this.newDestPanel.setVisible(false);
        this.updateDestPanel.setVisible(false);
        this.newTripPanel.setVisible(true);
        this.updateTripPanel.setVisible(false);
        this.modifyAgentPanel.setVisible(false);
        this.logedInAgent.setVisible(false);
    }//GEN-LAST:event_newTripActionPerformed
    public static Date StringToDate(String dateInString) throws ParseException {

        SimpleDateFormat formatter = new SimpleDateFormat("dd-MM-yyyy");
        java.util.Date date = formatter.parse(dateInString);
        java.sql.Date sqlStartDate = new java.sql.Date(date.getTime());

        return sqlStartDate;
    }
    private void addTripBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addTripBtnActionPerformed
        Trip newTrip = new Trip();
        if (tittleField.getText() != null && !tittleField.getText().trim().equals("")
                && priceField.getValue() != null && !priceField.getValue().equals(0)
                && dateFromField.getText() != null && !dateFromField.getText().trim().equals("")
                && dateToField.getText() != null && !dateToField.getText().trim().equals("")
                && dateFromField.getText().matches(dateFormatRegex) && dateToField.getText().matches(dateFormatRegex)) {

            try {
                newTrip.setTitle(tittleField.getText());
                newTrip.setPrice((Double) priceField.getValue());
                newTrip.setD_start(StringToDate(dateFromField.getText()));
                newTrip.setD_end(StringToDate(dateToField.getText()));

                Destination d = (Destination) destinationCmbBox.getSelectedItem();
                newTrip.setDestination(d);

                TripDAO dao = new TripDAO();
                Boolean answ = dao.insertTrip(newTrip);
                if (answ == true) {
                    ImageIcon icon = new ImageIcon("src/travelagencymanagementsystem/resources/success.png");
                    JOptionPane.showMessageDialog(null, "New Trip was added successfully", "Success", 0, icon);
                    this.mainMenu.setVisible(true);
                    this.welcomePanel.setVisible(false);
                    this.logInPanel.setVisible(false);
                    this.destinationPanel.setVisible(false);
                    this.tripPanel.setVisible(true);
                    this.travellerPanel.setVisible(false);
                    this.newTravellerPanel.setVisible(false);
                    this.updateTravellerPanel.setVisible(false);
                    this.accomodationPanel.setVisible(false);
                    this.agentPanel.setVisible(false);
                    this.reservationPanel.setVisible(false);
                    this.newReservationPanel.setVisible(false);
                    this.newDestPanel.setVisible(false);
                    this.updateDestPanel.setVisible(false);
                    this.newTripPanel.setVisible(false);
                    this.updateTripPanel.setVisible(false);
                    this.modifyAgentPanel.setVisible(false);
                    this.logedInAgent.setVisible(false);
                } else {
                    JOptionPane.showMessageDialog(null, "Something went wrong. Try again");

                }
            } catch (Exception e) {
                e.printStackTrace();
            }
        } else {
            ImageIcon icon = new ImageIcon("src/travelagencymanagementsystem/resources/tryagain.jpg");
            JOptionPane.showMessageDialog(null, "Please fill the fields", "Empty Fields", 0, icon);
        }
        tittleField.setText("");
        priceField.setValue(0);
        dateFromField.setText("");
        dateToField.setText("");

    }//GEN-LAST:event_addTripBtnActionPerformed

    private void newTripPanelComponentShown(java.awt.event.ComponentEvent evt) {//GEN-FIRST:event_newTripPanelComponentShown
        try {
            DestinationDAO dao = new DestinationDAO();
            ArrayList<Destination> destinations = dao.getAllDestinations();
            DefaultComboBoxModel dm = new DefaultComboBoxModel();
            destinationCmbBox.requestFocus();
            int index = destinationCmbBox.getSelectedIndex();

            for (Destination d : destinations) {
                dm.addElement(d);
            }
            destinationCmbBox.setModel(dm);
        } catch (Exception e) {
            e.printStackTrace();
        }
    }//GEN-LAST:event_newTripPanelComponentShown

    private void cancelAddTripBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cancelAddTripBtnActionPerformed
        this.mainMenu.setVisible(true);
        this.welcomePanel.setVisible(false);
        this.logInPanel.setVisible(false);
        this.destinationPanel.setVisible(false);
        this.tripPanel.setVisible(true);
        this.travellerPanel.setVisible(false);
        this.newTravellerPanel.setVisible(false);
        this.updateTravellerPanel.setVisible(false);
        this.accomodationPanel.setVisible(false);
        this.agentPanel.setVisible(false);
        this.reservationPanel.setVisible(false);
        this.newReservationPanel.setVisible(false);
        this.newDestPanel.setVisible(false);
        this.updateDestPanel.setVisible(false);
        this.newTripPanel.setVisible(false);
        this.updateTripPanel.setVisible(false);
        this.modifyAgentPanel.setVisible(false);
        this.logedInAgent.setVisible(false);
    }//GEN-LAST:event_cancelAddTripBtnActionPerformed

    private void updDateFromFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_updDateFromFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_updDateFromFieldActionPerformed

    private void updDateToFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_updDateToFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_updDateToFieldActionPerformed

    private void updateTripBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_updateTripBtnActionPerformed
        this.mainMenu.setVisible(false);
        this.welcomePanel.setVisible(false);
        this.logInPanel.setVisible(false);
        this.destinationPanel.setVisible(false);
        this.tripPanel.setVisible(false);
        this.travellerPanel.setVisible(false);
        this.newTravellerPanel.setVisible(false);
        this.updateTravellerPanel.setVisible(false);
        this.accomodationPanel.setVisible(false);
        this.agentPanel.setVisible(false);
        this.reservationPanel.setVisible(false);
        this.newReservationPanel.setVisible(false);
        this.newDestPanel.setVisible(false);
        this.updateDestPanel.setVisible(false);
        this.newTripPanel.setVisible(false);
        this.updateTripPanel.setVisible(true);
        this.modifyAgentPanel.setVisible(false);
        this.logedInAgent.setVisible(false);
    }//GEN-LAST:event_updateTripBtnActionPerformed

    private void updateTripButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_updateTripButtonActionPerformed
        int index = tripList.getSelectedIndex();
        Trip aTrip = (Trip) (Object) tripList.getModel().getElementAt(index);

        if (updTripTittleField.getText() != null && !updTripTittleField.getText().trim().equals("")
                && updPriceSpiner.getValue() != null && !updPriceSpiner.getValue().equals(0)
                && updDateFromField.getText() != null && !updDateFromField.getText().trim().equals("")
                && updDateToField.getText() != null && !updDateToField.getText().trim().equals("")
                && updDateToField.getText().matches(dateFormatRegex) && updDateToField.getText().matches(dateFormatRegex)) {
            try {
                aTrip.setTitle(updTripTittleField.getText());
                aTrip.setPrice((Double) updPriceSpiner.getValue());
                aTrip.setD_start(StringToDate(updDateFromField.getText()));
                aTrip.setD_end(StringToDate(updDateToField.getText()));

                Destination d = (Destination) updTripDestCmb.getSelectedItem();
                aTrip.setDestination(d);

                TripDAO dao = new TripDAO();
                Boolean answ = dao.updateTrip(aTrip);
                if (answ == true) {
                    ImageIcon icon = new ImageIcon("src/travelagencymanagementsystem/resources/success.png");
                    JOptionPane.showMessageDialog(null, "Trip was updated successfully", "Success", 0, icon);
                    this.mainMenu.setVisible(true);
                    this.welcomePanel.setVisible(false);
                    this.logInPanel.setVisible(false);
                    this.destinationPanel.setVisible(false);
                    this.tripPanel.setVisible(true);
                    this.travellerPanel.setVisible(false);
                    this.newTravellerPanel.setVisible(false);
                    this.updateTravellerPanel.setVisible(false);
                    this.accomodationPanel.setVisible(false);
                    this.agentPanel.setVisible(false);
                    this.reservationPanel.setVisible(false);
                    this.newReservationPanel.setVisible(false);
                    this.newDestPanel.setVisible(false);
                    this.updateDestPanel.setVisible(false);
                    this.newTripPanel.setVisible(false);
                    this.updateTripPanel.setVisible(false);
                    this.modifyAgentPanel.setVisible(false);
                    this.logedInAgent.setVisible(false);
                    deleteTripBtn.setEnabled(false);
                    updateTripBtn.setEnabled(false);
                } else {
                    JOptionPane.showMessageDialog(null, "Something went wrong. Try again");
                    deleteTripBtn.setEnabled(false);
                    updateTripBtn.setEnabled(false);
                }
            } catch (Exception e) {
                e.printStackTrace();
            }
        } else {
            ImageIcon icon = new ImageIcon("src/travelagencymanagementsystem/resources/tryagain.jpg");
            JOptionPane.showMessageDialog(null, "Please fill the fields", "Empty Fields", 0, icon);
        }

    }//GEN-LAST:event_updateTripButtonActionPerformed

    private void tripListMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tripListMouseClicked
        tripList.requestFocus();
        int index = tripList.getSelectedIndex();
        if (index >= 0 && index < tripList.getModel().getSize()) {
            Trip d = (Trip) (Object) tripList.getModel().getElementAt(index);
            updateTripBtn.setEnabled(true);
            deleteTripBtn.setEnabled(true);
        }

    }//GEN-LAST:event_tripListMouseClicked

    public static String DateToString(Date aDate) {
        DateFormat dateFormat = new SimpleDateFormat("dd-MM-yyyy");
        String strDate = dateFormat.format(aDate);

        return strDate;
    }

    private void updateTripPanelComponentShown(java.awt.event.ComponentEvent evt) {//GEN-FIRST:event_updateTripPanelComponentShown
        int index = tripList.getSelectedIndex();
        Trip d = (Trip) (Object) tripList.getModel().getElementAt(index);
        try {
            DestinationDAO dao = new DestinationDAO();
            ArrayList<Destination> destinations = dao.getAllDestinations();
            DefaultComboBoxModel dm = new DefaultComboBoxModel();
            //   destinationCmbBox.requestFocus();
            // int selected = destinationCmbBox.getSelectedIndex();
            for (Destination des : destinations) {
                dm.addElement(des);
            }
            updTripDestCmb.setModel(dm);
        } catch (Exception e) {
            e.printStackTrace();
        }

        updTripTittleField.setText(d.getTitle());
        updPriceSpiner.setValue(d.getPrice());
        updDateFromField.setText(DateToString(d.getD_start()));
        updDateToField.setText(DateToString(d.getD_end()));
        updTripDestCmb.setSelectedItem(d.getDestination());

    }//GEN-LAST:event_updateTripPanelComponentShown

    private void cancelTripUpdActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cancelTripUpdActionPerformed
        this.mainMenu.setVisible(true);
        this.welcomePanel.setVisible(false);
        this.logInPanel.setVisible(false);
        this.destinationPanel.setVisible(false);
        this.tripPanel.setVisible(true);
        this.travellerPanel.setVisible(false);
        this.newTravellerPanel.setVisible(false);
        this.updateTravellerPanel.setVisible(false);
        this.accomodationPanel.setVisible(false);
        this.agentPanel.setVisible(false);
        this.reservationPanel.setVisible(false);
        this.newReservationPanel.setVisible(false);
        this.newDestPanel.setVisible(false);
        this.updateDestPanel.setVisible(false);
        this.newTripPanel.setVisible(false);
        this.updateTripPanel.setVisible(false);
        this.modifyAgentPanel.setVisible(false);
        deleteTripBtn.setEnabled(false);
        updateTripBtn.setEnabled(false);
        this.logedInAgent.setVisible(false);
    }//GEN-LAST:event_cancelTripUpdActionPerformed

    private void agentNameFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_agentNameFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_agentNameFieldActionPerformed

    private void agentPanelComponentShown(java.awt.event.ComponentEvent evt) {//GEN-FIRST:event_agentPanelComponentShown
        try {
            TravelAgentDAO dao = new TravelAgentDAO();
            ArrayList<TravelAgent> agents = dao.showAllAgents();
            DefaultListModel dm = new DefaultListModel();

            agentList.requestFocus();
            int index = agentList.getSelectedIndex();
            if (index >= 0 && index < tripList.getModel().getSize()) {
                modifyAgentPanel.setEnabled(true);
                agentNameField.setEnabled(true);
                agentSurnameField.setEnabled(true);
                agentSalarySpinner.setEnabled(true);
                deleteAgentBtn.setEnabled(true);
                updateAgentBtn.setEnabled(true);
                cancelAgentModificationBtn.setEnabled(true);
            }
            for (TravelAgent d : agents) {
                dm.addElement(d);
            }
            agentList.setModel(dm);
        } catch (Exception e) {
            e.printStackTrace();
        }
    }//GEN-LAST:event_agentPanelComponentShown

    private void modifyAgentPanelMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_modifyAgentPanelMouseClicked

        modifyAgentPanel.setEnabled(true);
        agentNameField.setEnabled(true);
        agentSurnameField.setEnabled(true);
        agentSalarySpinner.setEnabled(true);
        addAgentBtn.setEnabled(true);
    }//GEN-LAST:event_modifyAgentPanelMouseClicked

    private void addAgentBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addAgentBtnActionPerformed
        TravelAgent agent = new TravelAgent();
        if (agentNameField.getText() != null && !agentNameField.getText().trim().equals("")
                && agentSurnameField.getText() != null && !agentSurnameField.getText().trim().equals("")
                && agentSalarySpinner.getValue() != null && !agentSalarySpinner.getValue().equals(0)) {
            agent.setAgentName(agentNameField.getText());
            agent.setAgentSurname(agentSurnameField.getText());
            agent.setSalary((int) agentSalarySpinner.getValue());

            try {
                TravelAgentDAO dao = new TravelAgentDAO();
                Boolean answ = dao.insertAgent(agent);
                if (answ == true) {
                    ImageIcon icon = new ImageIcon("src/travelagencymanagementsystem/resources/success.png");
                    JOptionPane.showMessageDialog(null, "New agent was added successfully", "Success", 0, icon);
                    DefaultListModel dm = new DefaultListModel();
                    ArrayList<TravelAgent> agents = dao.showAllAgents();
                    for (TravelAgent ag : agents) {

                        dm.addElement(ag);
                    }
                    agentList.setModel(dm);

                    this.mainMenu.setVisible(true);
                    this.welcomePanel.setVisible(false);
                    this.logInPanel.setVisible(false);
                    this.destinationPanel.setVisible(false);
                    this.tripPanel.setVisible(false);
                    this.travellerPanel.setVisible(false);
                    this.newTravellerPanel.setVisible(false);
                    this.updateTravellerPanel.setVisible(false);
                    this.accomodationPanel.setVisible(false);
                    this.agentPanel.setVisible(true);
                    this.reservationPanel.setVisible(false);
                    this.newReservationPanel.setVisible(false);
                    this.newDestPanel.setVisible(false);
                    this.updateDestPanel.setVisible(false);
                    this.newTripPanel.setVisible(false);
                    this.updateTripPanel.setVisible(false);
                    this.modifyAgentPanel.setEnabled(false);
                    this.logedInAgent.setVisible(false);
                } else {
                    JOptionPane.showMessageDialog(null, "Something went wrong. Try again");
                }
            } catch (Exception e) {
                e.printStackTrace();
            }
        } else {
            ImageIcon icon = new ImageIcon("src/travelagencymanagementsystem/resources/tryagain.jpg");
            JOptionPane.showMessageDialog(null, "Please fill the fields", "Empty Fields", 0, icon);
        }
        agentNameField.setText("");
        agentSurnameField.setText("");
        agentSalarySpinner.setValue(0);
    }//GEN-LAST:event_addAgentBtnActionPerformed

    private void updateAgentBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_updateAgentBtnActionPerformed
        int index = agentList.getSelectedIndex();
        TravelAgent ta = (TravelAgent) (Object) agentList.getModel().getElementAt(index);

        if (agentNameField.getText() != null && !agentNameField.getText().trim().equals("")
                && agentSurnameField.getText() != null && !agentSurnameField.getText().trim().equals("")
                && agentSalarySpinner.getValue() != null && !agentSalarySpinner.getValue().equals(0)) {
            ta.setAgentName(agentNameField.getText());
            ta.setAgentSurname(agentSurnameField.getText());
            ta.setSalary((int) agentSalarySpinner.getValue());
            try {
                TravelAgentDAO dao = new TravelAgentDAO();
                Boolean answ = dao.updateAgent(ta);
                if (answ == true) {
                    ImageIcon icon = new ImageIcon("src/travelagencymanagementsystem/resources/success.png");
                    JOptionPane.showMessageDialog(null, "Agent was updated successfully", "Success", 0, icon);
                    DefaultListModel dm = new DefaultListModel();
                    ArrayList<TravelAgent> agents = dao.showAllAgents();
                    for (TravelAgent ag : agents) {

                        dm.addElement(ag);
                    }
                    agentList.setModel(dm);

                    this.mainMenu.setVisible(true);
                    this.welcomePanel.setVisible(false);
                    this.logInPanel.setVisible(false);
                    this.destinationPanel.setVisible(false);
                    this.tripPanel.setVisible(false);
                    this.travellerPanel.setVisible(false);
                    this.newTravellerPanel.setVisible(false);
                    this.updateTravellerPanel.setVisible(false);
                    this.accomodationPanel.setVisible(false);
                    this.agentPanel.setVisible(true);
                    this.reservationPanel.setVisible(false);
                    this.newReservationPanel.setVisible(false);
                    this.newDestPanel.setVisible(false);
                    this.updateDestPanel.setVisible(false);
                    this.newTripPanel.setVisible(false);
                    this.updateTripPanel.setVisible(false);
                    this.modifyAgentPanel.setEnabled(false);
                    this.logedInAgent.setVisible(false);
                    deleteAgentBtn.setEnabled(false);
                    updateAgentBtn.setEnabled(false);
                    agentNameField.setEnabled(false);
                    agentSurnameField.setEnabled(false);
                    agentSalarySpinner.setEnabled(false);
                } else {
                    JOptionPane.showMessageDialog(null, "Something went wrong. Try again");
                    deleteAgentBtn.setEnabled(false);
                    updateAgentBtn.setEnabled(false);

                }
            } catch (Exception e) {
                e.printStackTrace();
            }
        } else {
            ImageIcon icon = new ImageIcon("src/travelagencymanagementsystem/resources/tryagain.jpg");
            JOptionPane.showMessageDialog(null, "Please fill the fields", "Empty Fields", 0, icon);
        }
        agentNameField.setText("");
        agentSurnameField.setText("");
        agentSalarySpinner.setValue(0);
    }//GEN-LAST:event_updateAgentBtnActionPerformed

    private void agentListMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_agentListMouseClicked
        agentList.requestFocus();
        int index = agentList.getSelectedIndex();
        if (index >= 0 && index < agentList.getModel().getSize()) {
            TravelAgent d = (TravelAgent) (Object) agentList.getModel().getElementAt(index);
            agentNameField.setText(d.getAgentName());
            agentSurnameField.setText(d.getAgentSurname());
            agentSalarySpinner.setValue(d.getSalary());
            this.modifyAgentPanel.setEnabled(true);
            agentNameField.setEnabled(true);
            agentSurnameField.setEnabled(true);
            agentSalarySpinner.setEnabled(true);
            addAgentBtn.setEnabled(false);
            cancelAgentModificationBtn.setEnabled(true);
            deleteAgentBtn.setEnabled(true);
            updateAgentBtn.setEnabled(true);
        }
    }//GEN-LAST:event_agentListMouseClicked

    private void deleteAgentBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteAgentBtnActionPerformed

        int index = agentList.getSelectedIndex();
        TravelAgent d = (TravelAgent) (Object) agentList.getModel().getElementAt(index);

        try {
            TravelAgentDAO dao = new TravelAgentDAO();
            Boolean answ = dao.deleteAgent(d);
            if (answ == true) {
                ImageIcon icon = new ImageIcon("src/travelagencymanagementsystem/resources/success.png");
                JOptionPane.showMessageDialog(null, "Travel Agent was deleted successfully", "Success", 0, icon);
                //rishfaq listen e update-uar
                DefaultListModel dm = new DefaultListModel();
                ArrayList<TravelAgent> agents = dao.showAllAgents();
                for (TravelAgent ag : agents) {

                    dm.addElement(ag);
                }
                agentList.setModel(dm);

                deleteAgentBtn.setEnabled(false);
                updateAgentBtn.setEnabled(false);
            } else {
                ImageIcon icon = new ImageIcon("src/travelagencymanagementsystem/resources/deletionNotAllowed.jpg");
                JOptionPane.showMessageDialog(null, "The Agent is in use", "Failed", 0, icon);
                deleteDestBtn.setEnabled(false);
                updateDestBtn.setEnabled(false);
            }
        } catch (Exception e) {
            e.printStackTrace();
        }

    }//GEN-LAST:event_deleteAgentBtnActionPerformed

    private void cancelAgentModificationBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cancelAgentModificationBtnActionPerformed
        agentNameField.setText("");
        agentSurnameField.setText("");
        agentSalarySpinner.setValue(0);
        agentNameField.setEnabled(false);
        agentSurnameField.setEnabled(false);
        agentSalarySpinner.setEnabled(false);
        cancelAgentModificationBtn.setEnabled(false);
        modifyAgentPanel.setEnabled(false);
        addAgentBtn.setEnabled(false);
        updateAgentBtn.setEnabled(false);
        deleteAgentBtn.setEnabled(false);
    }//GEN-LAST:event_cancelAgentModificationBtnActionPerformed

    private void logedInAgentComponentShown(java.awt.event.ComponentEvent evt) {//GEN-FIRST:event_logedInAgentComponentShown

        Login logAcc = new Login();
        logInPanel.getComponents();
        logAcc.setUsername(usernameField.getText());
        logAcc.setPassword(passwordField.getText());
        try {
            LoginDAO dao = new LoginDAO();

            Login data = dao.agentCredentials(logAcc);
            accName.setText(data.getAgent().getAgentName());
            accSurname.setText(data.getAgent().getAgentSurname());
            accUsnm.setText(data.getUsername());
            String pwd = data.getPassword();
            pwd = pwd.substring(10, pwd.length() - 8);
            accPwd.setText(pwd);
        } catch (Exception e) {
            e.printStackTrace();
        }

    }//GEN-LAST:event_logedInAgentComponentShown

    private void modifyAccDataActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_modifyAccDataActionPerformed
        //      accName.setEnabled(true);
        ////      accSurname.setEnabled(true);
        //accName.getText() != null && !accName.getText().trim().equals("")
        //                && accSurname.getText() != null && !accSurname.getText().trim().equals("")
        //                &&
        accUsnm.setEnabled(true);
        accPwd.setEnabled(true);
        updateLoginDataBtn.setEnabled(true);


    }//GEN-LAST:event_modifyAccDataActionPerformed

    private void updateLoginDataBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_updateLoginDataBtnActionPerformed
       if ( accUsnm.getText() != null && !accUsnm.getText().trim().equals("")
                && accPwd.getText() != null && !accPwd.getText().trim().equals("")&& accPwd.getText().length()<11) {
            Login accData = new Login();
            accData.setUsername(accUsnm.getText());
            accData.setPassword(accPwd.getText());
            System.out.println(accData.getUsername()+" dhe "+accData.getPassword());
            LoginDAO dao = new LoginDAO();
            try {
                
                Login helpObj = dao.agentCredentials(accData);
                System.out.println(helpObj.getUsername()+" dhe "+helpObj.getPassword());
                System.out.println(helpObj.getAgent());
                int accId = helpObj.getUser_id();
                System.out.println(accId);
             //   TravelAgent ag = helpObj.getAgent();
                
                accData.setUsername(accUsnm.getText());
                accData.setPassword(accPwd.getText());
                accData.setUser_id(accId);
            //    accData.setAgent(ag);

                Boolean answ = dao.updateLogin(accData);
                if (answ == true) {
                    ImageIcon icon = new ImageIcon("src/travelagencymanagementsystem/resources/success.png");
                    JOptionPane.showMessageDialog(null, "Credentials updated successfully", "Success", 0, icon);
                    this.mainMenu.setVisible(true);
                    this.welcomePanel.setVisible(false);
                    this.logInPanel.setVisible(false);
                    this.destinationPanel.setVisible(false);
                    this.tripPanel.setVisible(false);
                    this.travellerPanel.setVisible(false);
                    this.accomodationPanel.setVisible(false);
                    this.agentPanel.setVisible(false);
                    this.reservationPanel.setVisible(false);
                    this.newDestPanel.setVisible(false);
                    this.updateDestPanel.setVisible(false);
                    this.newTripPanel.setVisible(false);
                    this.updateTripPanel.setVisible(false);
                    this.modifyAgentPanel.setVisible(false);
                    this.logedInAgent.setVisible(true);
                    accUsnm.setEnabled(false);
                    accPwd.setEnabled(false);
                    updateLoginDataBtn.setEnabled(false);
                } else {
                    JOptionPane.showMessageDialog(null, "Something went wrong. Try again");
                    accUsnm.setEnabled(false);
                    accPwd.setEnabled(false);
                    updateLoginDataBtn.setEnabled(false);
                }
            } catch (Exception e) {
                e.printStackTrace();
            }
        } else {
            ImageIcon icon = new ImageIcon("src/travelagencymanagementsystem/resources/tryagain.jpg");
            JOptionPane.showMessageDialog(null, "Please fill the fields or check password length.", "Empty Fields", 0, icon);
        }
    }//GEN-LAST:event_updateLoginDataBtnActionPerformed

    private void deleteAccountBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteAccountBtnActionPerformed
        Login loginData = new Login();
        loginData.setUsername(accUsnm.getText());
        loginData.setPassword(accPwd.getText());
        LoginDAO dao = new LoginDAO();
        try {
            Login lObj = dao.agentCredentials(loginData);
            int id = lObj.getUser_id();
            int agent_id = lObj.getAgent().getN_idAgent();
            Login new_acc = new Login();
            new_acc.setUser_id(id);
            TravelAgent ag = new TravelAgent();
            ag.setN_idAgent(agent_id);
            new_acc.setAgent(ag);

            Boolean answ = dao.deleteLogin(new_acc);
            if (answ == true) {
                ImageIcon icon = new ImageIcon("src/travelagencymanagementsystem/resources/success.png");
                JOptionPane.showMessageDialog(null, "Account deleted successfully", "Success", 0, icon);
                //rishfaq listen e update-uar
                this.mainMenu.setVisible(false);
                this.welcomePanel.setVisible(true);
                this.logInPanel.setVisible(false);
                this.destinationPanel.setVisible(false);
                this.tripPanel.setVisible(false);
                this.travellerPanel.setVisible(false);
                this.newTravellerPanel.setVisible(false);
                this.updateTravellerPanel.setVisible(false);
                this.accomodationPanel.setVisible(false);
                this.agentPanel.setVisible(false);
                this.reservationPanel.setVisible(false);
                this.newReservationPanel.setVisible(false);
                this.newDestPanel.setVisible(false);
                this.updateDestPanel.setVisible(false);
                this.newTripPanel.setVisible(false);
                this.updateTripPanel.setVisible(false);
                this.modifyAgentPanel.setVisible(false);
                this.logedInAgent.setVisible(false);
            } else {
                ImageIcon icon = new ImageIcon("src/travelagencymanagementsystem/resources/deletionNotAllowed.jpg");
                JOptionPane.showMessageDialog(null, "Account is in use", "Failed", 0, icon);
                deleteTripBtn.setEnabled(false);
                updateTripBtn.setEnabled(false);
            }
        } catch (Exception e) {
            e.printStackTrace();
        }

    }//GEN-LAST:event_deleteAccountBtnActionPerformed

    private void editAccountMenuItemMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_editAccountMenuItemMouseClicked
        this.welcomePanel.setVisible(false);
        this.logInPanel.setVisible(false);
        this.destinationPanel.setVisible(false);
        this.tripPanel.setVisible(false);
        this.travellerPanel.setVisible(false);
        this.newTravellerPanel.setVisible(false);
        this.updateTravellerPanel.setVisible(false);
        this.accomodationPanel.setVisible(false);
        this.agentPanel.setVisible(false);
        this.reservationPanel.setVisible(false);
        this.updateDestPanel.setVisible(false);
        this.newTripPanel.setVisible(false);
        this.updateTripPanel.setVisible(false);
        this.modifyAgentPanel.setVisible(false);
        this.logedInAgent.setVisible(true);
    }//GEN-LAST:event_editAccountMenuItemMouseClicked

    private void logoutMenuItemMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_logoutMenuItemMouseClicked
        this.welcomePanel.setVisible(true);
        this.logInPanel.setVisible(false);
        this.destinationPanel.setVisible(false);
        this.tripPanel.setVisible(false);
        this.travellerPanel.setVisible(false);
        this.newTravellerPanel.setVisible(false);
        this.updateTravellerPanel.setVisible(false);
        this.accomodationPanel.setVisible(false);
        this.agentPanel.setVisible(false);
        this.reservationPanel.setVisible(false);
        this.newReservationPanel.setVisible(false);
        this.updateDestPanel.setVisible(false);
        this.newTripPanel.setVisible(false);
        this.updateTripPanel.setVisible(false);
        this.modifyAgentPanel.setVisible(false);
        this.logedInAgent.setVisible(false);
    }//GEN-LAST:event_logoutMenuItemMouseClicked

    private void editAccountMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_editAccountMenuItemActionPerformed
        this.welcomePanel.setVisible(false);
        this.logInPanel.setVisible(false);
        this.destinationPanel.setVisible(false);
        this.tripPanel.setVisible(false);
        this.travellerPanel.setVisible(false);
        this.newTravellerPanel.setVisible(false);
        this.updateTravellerPanel.setVisible(false);
        this.accomodationPanel.setVisible(false);
        this.agentPanel.setVisible(false);
        this.reservationPanel.setVisible(false);
        this.newReservationPanel.setVisible(false);
        this.updateDestPanel.setVisible(false);
        this.newTripPanel.setVisible(false);
        this.updateTripPanel.setVisible(false);
        this.modifyAgentPanel.setVisible(false);
        this.logedInAgent.setVisible(true);
    }//GEN-LAST:event_editAccountMenuItemActionPerformed

    private void logoutMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_logoutMenuItemActionPerformed
        this.welcomePanel.setVisible(true);
        this.logInPanel.setVisible(false);
        this.destinationPanel.setVisible(false);
        this.tripPanel.setVisible(false);
        this.travellerPanel.setVisible(false);
        this.newTravellerPanel.setVisible(false);
        this.updateTravellerPanel.setVisible(false);
        this.accomodationPanel.setVisible(false);
        this.agentPanel.setVisible(false);
        this.reservationPanel.setVisible(false);
        this.newReservationPanel.setVisible(false);
        this.updateDestPanel.setVisible(false);
        this.newTripPanel.setVisible(false);
        this.updateTripPanel.setVisible(false);
        this.modifyAgentPanel.setVisible(false);
        this.logedInAgent.setVisible(false);
    }//GEN-LAST:event_logoutMenuItemActionPerformed

    private void addNewAccBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addNewAccBtnActionPerformed

        Login newacc = new Login();
        if (newAccUsernameField.getText() != null && !newAccUsernameField.getText().trim().equals("")
                && newAccPwdField.getText() != null && !newAccPwdField.getText().trim().equals("") && newAccPwdField.getText().length() < 13) {

            try {
                newacc.setUsername(newAccUsernameField.getText());
                newacc.setPassword(newAccPwdField.getText());

                TravelAgent agent = (TravelAgent) agentCmb.getSelectedItem();
                newacc.setAgent(agent);

                LoginDAO dao = new LoginDAO();
                Boolean answ = dao.insertNewAgentLogin(newacc);
                if (answ == true) {
                    ImageIcon icon = new ImageIcon("src/travelagencymanagementsystem/resources/success.png");
                    JOptionPane.showMessageDialog(null, "New account was created successfully", "Success", 0, icon);
                    this.mainMenu.setVisible(true);
                    this.welcomePanel.setVisible(false);
                    this.logInPanel.setVisible(false);
                    this.destinationPanel.setVisible(false);
                    this.tripPanel.setVisible(false);
                    this.travellerPanel.setVisible(false);
                    this.newTravellerPanel.setVisible(false);
                    this.updateTravellerPanel.setVisible(false);
                    this.accomodationPanel.setVisible(false);
                    this.agentPanel.setVisible(true);
                    this.reservationPanel.setVisible(false);
                    this.newReservationPanel.setVisible(false);
                    this.newDestPanel.setVisible(false);
                    this.updateDestPanel.setVisible(false);
                    this.newTripPanel.setVisible(false);
                    this.updateTripPanel.setVisible(false);
                    this.modifyAgentPanel.setVisible(true);
                    this.logedInAgent.setVisible(false);
                    newAccount.setVisible(false);
                } else {
                    JOptionPane.showMessageDialog(null, "Something went wrong. Try again");

                }
            } catch (Exception e) {
                e.printStackTrace();
            }
        } else {
            ImageIcon icon = new ImageIcon("src/travelagencymanagementsystem/resources/tryagain.jpg");
            JOptionPane.showMessageDialog(null, "Please fill the fields", "Empty Fields", 0, icon);
        }
        newAccUsernameField.setText("");
        newAccPwdField.setText("");

    }//GEN-LAST:event_addNewAccBtnActionPerformed

    private void newAccountComponentShown(java.awt.event.ComponentEvent evt) {//GEN-FIRST:event_newAccountComponentShown
        try {
            TravelAgentDAO dao = new TravelAgentDAO();
            ArrayList<TravelAgent> agents = dao.showAllAgents();
            DefaultComboBoxModel dm = new DefaultComboBoxModel();
            agentCmb.requestFocus();
            int index = agentCmb.getSelectedIndex();

            for (TravelAgent d : agents) {
                dm.addElement(d);
            }
            agentCmb.setModel(dm);
        } catch (Exception e) {
            e.printStackTrace();
        }
    }//GEN-LAST:event_newAccountComponentShown

    private void cancelNewAccBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cancelNewAccBtnActionPerformed
        newAccount.setDefaultCloseOperation(EXIT_ON_CLOSE);
        newAccount.setVisible(false);
        this.mainMenu.setVisible(true);
        this.welcomePanel.setVisible(false);
        this.logInPanel.setVisible(false);
        this.destinationPanel.setVisible(false);
        this.tripPanel.setVisible(false);
        this.travellerPanel.setVisible(false);
        this.newTravellerPanel.setVisible(false);
        this.updateTravellerPanel.setVisible(false);
        this.accomodationPanel.setVisible(false);
        this.agentPanel.setVisible(true);
        this.reservationPanel.setVisible(false);
        this.newReservationPanel.setVisible(false);
        this.newDestPanel.setVisible(false);
        this.updateDestPanel.setVisible(false);
        this.newTripPanel.setVisible(false);
        this.updateTripPanel.setVisible(false);
        this.modifyAgentPanel.setVisible(false);
        this.logedInAgent.setVisible(false);
    }//GEN-LAST:event_cancelNewAccBtnActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        this.mainMenu.setVisible(false);
        this.welcomePanel.setVisible(false);
        this.logInPanel.setVisible(false);
        this.destinationPanel.setVisible(false);
        this.tripPanel.setVisible(false);
        this.travellerPanel.setVisible(false);
        this.newTravellerPanel.setVisible(false);
        this.updateTravellerPanel.setVisible(false);
        this.accomodationPanel.setVisible(false);
        this.agentPanel.setVisible(false);
        this.reservationPanel.setVisible(false);
        this.newReservationPanel.setVisible(false);
        this.newDestPanel.setVisible(false);
        this.updateDestPanel.setVisible(false);
        this.newTripPanel.setVisible(false);
        this.updateTripPanel.setVisible(false);
        this.modifyAgentPanel.setVisible(false);
        this.logedInAgent.setVisible(false);
        newAccount.show();
    }//GEN-LAST:event_jButton1ActionPerformed

    private void travellerPanelComponentShown(java.awt.event.ComponentEvent evt) {//GEN-FIRST:event_travellerPanelComponentShown
        try {
            TravellerDAO dao = new TravellerDAO();
            ArrayList<Traveller> travellers = dao.getAllTravellers();
            DefaultListModel dm = new DefaultListModel();
            travellersList.requestFocus();
            int index = travellersList.getSelectedIndex();
            if (index >= 0 && index < travellersList.getModel().getSize()) {
                deleteTravellerBtn.setEnabled(true);
                updTravellerBtn.setEnabled(true);
            }
            for (Traveller d : travellers) {
                dm.addElement(d);
            }
            travellersList.setModel(dm);
        } catch (Exception e) {
            e.printStackTrace();
        }

    }//GEN-LAST:event_travellerPanelComponentShown

    private void newTravellerBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_newTravellerBtnActionPerformed
        this.welcomePanel.setVisible(false);
        this.logInPanel.setVisible(false);
        this.destinationPanel.setVisible(false);
        this.tripPanel.setVisible(false);
        this.travellerPanel.setVisible(false);
        this.newTravellerPanel.setVisible(true);
        this.updateTravellerPanel.setVisible(false);
        this.accomodationPanel.setVisible(false);
        this.agentPanel.setVisible(false);
        this.reservationPanel.setVisible(false);
        this.newReservationPanel.setVisible(false);
        this.updateDestPanel.setVisible(false);
        this.newTripPanel.setVisible(false);
        this.updateTripPanel.setVisible(false);
        this.modifyAgentPanel.setVisible(false);
        this.logedInAgent.setVisible(false);
    }//GEN-LAST:event_newTravellerBtnActionPerformed

    private void cancelnewTravActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cancelnewTravActionPerformed
        this.mainMenu.setVisible(true);
        this.welcomePanel.setVisible(false);
        this.logInPanel.setVisible(false);
        this.destinationPanel.setVisible(false);
        this.tripPanel.setVisible(false);
        this.travellerPanel.setVisible(true);
        this.newTravellerPanel.setVisible(false);
        this.updateTravellerPanel.setVisible(false);
        this.accomodationPanel.setVisible(false);
        this.agentPanel.setVisible(false);
        this.reservationPanel.setVisible(false);
        this.newReservationPanel.setVisible(false);
        this.newDestPanel.setVisible(false);
        this.updateDestPanel.setVisible(false);
        this.newTripPanel.setVisible(false);
        this.updateTripPanel.setVisible(false);
        this.modifyAgentPanel.setVisible(false);
        this.logedInAgent.setVisible(false);
    }//GEN-LAST:event_cancelnewTravActionPerformed

    private void addTravellerBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addTravellerBtnActionPerformed
        Traveller newTraveller = new Traveller();
        if (newTravName.getText() != null && !newTravName.getText().trim().equals("")
                && newTravSurname.getText() != null && !newTravSurname.getText().equals("")
                && newTravBdate.getText() != null && !newTravBdate.getText().trim().equals("")
                && newTravBdate.getText().matches(dateFormatRegex)) {

            try {

                newTraveller.setT_name(newTravName.getText());
                newTraveller.setT_surname(newTravSurname.getText());
                newTraveller.setD_birth(StringToDate(newTravBdate.getText()));

                TravellerDAO dao = new TravellerDAO();
                Boolean answ = dao.insertTravelller(newTraveller);
                if (answ == true) {
                    ImageIcon icon = new ImageIcon("src/travelagencymanagementsystem/resources/success.png");
                    JOptionPane.showMessageDialog(null, "Traveller was added successfully", "Success", 0, icon);
                    this.mainMenu.setVisible(true);
                    this.welcomePanel.setVisible(false);
                    this.logInPanel.setVisible(false);
                    this.destinationPanel.setVisible(false);
                    this.tripPanel.setVisible(false);
                    this.travellerPanel.setVisible(true);
                    this.newTravellerPanel.setVisible(false);
                    this.updateTravellerPanel.setVisible(false);
                    this.accomodationPanel.setVisible(false);
                    this.agentPanel.setVisible(false);
                    this.reservationPanel.setVisible(false);
                    this.newReservationPanel.setVisible(false);
                    this.newDestPanel.setVisible(false);
                    this.updateDestPanel.setVisible(false);
                    this.newTripPanel.setVisible(false);
                    this.updateTripPanel.setVisible(false);
                    this.modifyAgentPanel.setVisible(false);
                    this.logedInAgent.setVisible(false);
                } else {
                    JOptionPane.showMessageDialog(null, "Something went wrong. Try again");

                }
            } catch (Exception e) {
                e.printStackTrace();
            }
        } else {
            ImageIcon icon = new ImageIcon("src/travelagencymanagementsystem/resources/tryagain.jpg");
            JOptionPane.showMessageDialog(null, "Please fill the fields", "Empty Fields", 0, icon);
        }
        newTravName.setText("");
        newTravSurname.setText("");
        newTravBdate.setText("");
    }//GEN-LAST:event_addTravellerBtnActionPerformed

    private void travellersListMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_travellersListMouseClicked
        travellersList.requestFocus();
        int index = travellersList.getSelectedIndex();
        if (index >= 0 && index < travellersList.getModel().getSize()) {
            Traveller d = (Traveller) (Object) travellersList.getModel().getElementAt(index);
            updTravellerBtn.setEnabled(true);
            deleteTravellerBtn.setEnabled(true);
        }

    }//GEN-LAST:event_travellersListMouseClicked

    private void updTravSurnameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_updTravSurnameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_updTravSurnameActionPerformed

    private void cancelTravBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cancelTravBtnActionPerformed
        this.mainMenu.setVisible(true);
        this.welcomePanel.setVisible(false);
        this.logInPanel.setVisible(false);
        this.destinationPanel.setVisible(false);
        this.tripPanel.setVisible(false);
        this.travellerPanel.setVisible(true);
        this.newTravellerPanel.setVisible(false);
        this.updateTravellerPanel.setVisible(false);
        this.accomodationPanel.setVisible(false);
        this.agentPanel.setVisible(false);
        this.reservationPanel.setVisible(false);
        this.newReservationPanel.setVisible(false);
        this.newDestPanel.setVisible(false);
        this.updateDestPanel.setVisible(false);
        this.newTripPanel.setVisible(false);
        this.updateTripPanel.setVisible(false);
        this.modifyAgentPanel.setVisible(false);
        this.logedInAgent.setVisible(false);
    }//GEN-LAST:event_cancelTravBtnActionPerformed

    private void updateTravellerPanelComponentShown(java.awt.event.ComponentEvent evt) {//GEN-FIRST:event_updateTravellerPanelComponentShown
        int index = travellersList.getSelectedIndex();
        Traveller d = (Traveller) (Object) travellersList.getModel().getElementAt(index);

        updTravName.setText(d.getT_name());
        updTravSurname.setText(d.getT_surname());
        updTravBdate.setText(DateToString(d.getD_birth()));

    }//GEN-LAST:event_updateTravellerPanelComponentShown

    private void updateTravBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_updateTravBtnActionPerformed
        int index = travellersList.getSelectedIndex();
        Traveller tr = (Traveller) (Object) travellersList.getModel().getElementAt(index);

        if (updTravName.getText() != null && !updTravName.getText().trim().equals("")
                && updTravSurname.getText() != null && !updTravSurname.getText().equals("")
                && updTravBdate.getText() != null && !updTravBdate.getText().trim().equals("")
                && updTravBdate.getText().matches(dateFormatRegex)) {
            try {
                tr.setT_name(updTravName.getText());
                tr.setT_surname(updTravSurname.getText());
                tr.setD_birth(StringToDate(updTravBdate.getText()));

                TravellerDAO dao = new TravellerDAO();
                Boolean answ = dao.updateTraveller(tr);
                if (answ == true) {
                    ImageIcon icon = new ImageIcon("src/travelagencymanagementsystem/resources/success.png");
                    JOptionPane.showMessageDialog(null, "Traveller updated successfully", "Success", 0, icon);
                    this.mainMenu.setVisible(true);
                    this.welcomePanel.setVisible(false);
                    this.logInPanel.setVisible(false);
                    this.destinationPanel.setVisible(false);
                    this.tripPanel.setVisible(false);
                    this.travellerPanel.setVisible(true);
                    this.newTravellerPanel.setVisible(false);
                    this.updateTravellerPanel.setVisible(false);
                    this.accomodationPanel.setVisible(false);
                    this.agentPanel.setVisible(false);
                    this.reservationPanel.setVisible(false);
                    this.newReservationPanel.setVisible(false);
                    this.newDestPanel.setVisible(false);
                    this.updateDestPanel.setVisible(false);
                    this.newTripPanel.setVisible(false);
                    this.updateTripPanel.setVisible(false);
                    this.modifyAgentPanel.setVisible(false);
                    this.logedInAgent.setVisible(false);
                    deleteTravellerBtn.setEnabled(false);
                    updTravellerBtn.setEnabled(false);
                } else {
                    JOptionPane.showMessageDialog(null, "Something went wrong. Try again");
                    deleteTravellerBtn.setEnabled(false);
                    updTravellerBtn.setEnabled(false);
                }
            } catch (Exception e) {
                e.printStackTrace();
            }
        } else {
            ImageIcon icon = new ImageIcon("src/travelagencymanagementsystem/resources/tryagain.jpg");
            JOptionPane.showMessageDialog(null, "Please fill the fields", "Empty Fields", 0, icon);
        }
    }//GEN-LAST:event_updateTravBtnActionPerformed

    private void updTravellerBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_updTravellerBtnActionPerformed
        this.mainMenu.setVisible(true);
        this.welcomePanel.setVisible(false);
        this.logInPanel.setVisible(false);
        this.destinationPanel.setVisible(false);
        this.tripPanel.setVisible(false);
        this.travellerPanel.setVisible(false);
        this.newTravellerPanel.setVisible(false);
        this.updateTravellerPanel.setVisible(true);
        this.accomodationPanel.setVisible(false);
        this.agentPanel.setVisible(false);
        this.reservationPanel.setVisible(false);
        this.newReservationPanel.setVisible(false);
        this.newDestPanel.setVisible(false);
        this.updateDestPanel.setVisible(false);
        this.newTripPanel.setVisible(false);
        this.updateTripPanel.setVisible(false);
        this.modifyAgentPanel.setVisible(false);
        this.logedInAgent.setVisible(false);
    }//GEN-LAST:event_updTravellerBtnActionPerformed

    private void deleteTravellerBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteTravellerBtnActionPerformed
        int index = travellersList.getSelectedIndex();
        Traveller d = (Traveller) (Object) travellersList.getModel().getElementAt(index);

        try {
            TravellerDAO dao = new TravellerDAO();
            Boolean answ = dao.deleteTraveller(d);
            if (answ == true) {
                ImageIcon icon = new ImageIcon("src/travelagencymanagementsystem/resources/success.png");
                JOptionPane.showMessageDialog(null, "Traveller deleted successfully", "Success", 0, icon);
                //rishfaq listen e update-uar
                DefaultListModel dm = new DefaultListModel();
                ArrayList<Traveller> travellers = dao.getAllTravellers();
                for (Traveller destIter : travellers) {

                    dm.addElement(destIter);
                }
                travellersList.setModel(dm);

                deleteTravellerBtn.setEnabled(false);
                updTravellerBtn.setEnabled(false);
            } else {
                ImageIcon icon = new ImageIcon("src/travelagencymanagementsystem/resources/deletionNotAllowed.jpg");
                JOptionPane.showMessageDialog(null, "Travellers is part of DB", "Failed", 0, icon);
                deleteTravellerBtn.setEnabled(false);
                updTravellerBtn.setEnabled(false);
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
    }//GEN-LAST:event_deleteTravellerBtnActionPerformed

    private void accomodationsListMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_accomodationsListMouseClicked
        accomodationsList.requestFocus();
        int index = accomodationsList.getSelectedIndex();
        if (index >= 0 && index < accomodationsList.getModel().getSize()) {
            Accomodation d = (Accomodation) (Object) accomodationsList.getModel().getElementAt(index);
            accmdtTypeField.setText(d.getAccomodation_type());
            addressField.setText(d.getAddress());
            costSpinner.setValue(d.getCost());
            accmdtDestCmb.setSelectedItem(d.getDestination());

            deleteAccmdtBtn.setEnabled(true);
            updAccmdtBtn.setEnabled(true);
        }
        updAccmdtBtn.setEnabled(true);
        deleteAccmdtBtn.setEnabled(true);

    }//GEN-LAST:event_accomodationsListMouseClicked

    private void accomodationPanelComponentShown(java.awt.event.ComponentEvent evt) {//GEN-FIRST:event_accomodationPanelComponentShown
        try {
            AccomodationDAO dao = new AccomodationDAO();
            ArrayList<Accomodation> accmdts = dao.getAllAccomodations();
            DefaultListModel dm = new DefaultListModel();

            accomodationsList.requestFocus();
            int index = accomodationsList.getSelectedIndex();
            if (index >= 0 && index < accomodationsList.getModel().getSize()) {
                Accomodation d = (Accomodation) (Object) accomodationsList.getModel().getElementAt(index);
                accmdtTypeField.setText(d.getAccomodation_type());
                addressField.setText(d.getAddress());
                costSpinner.setValue(d.getCost());
                accmdtDestCmb.setSelectedItem(d.getDestination());

                deleteAccmdtBtn.setEnabled(true);
                updAccmdtBtn.setEnabled(true);
            }
            for (Accomodation d : accmdts) {
                dm.addElement(d);
            }
            accomodationsList.setModel(dm);

            DestinationDAO destDao = new DestinationDAO();
            ArrayList<Destination> destinations = destDao.getAllDestinations();
            DefaultComboBoxModel cmbModel = new DefaultComboBoxModel();
            accmdtDestCmb.requestFocus();
            //   int selected = accmdtDestCmb.getSelectedIndex();

            for (Destination d : destinations) {
                cmbModel.addElement(d);
            }
            accmdtDestCmb.setModel(cmbModel);
        } catch (Exception e) {
            e.printStackTrace();
        }
    }//GEN-LAST:event_accomodationPanelComponentShown

    private void addAccmdtBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addAccmdtBtnActionPerformed
        Accomodation newAccmdt = new Accomodation();

        if (accmdtTypeField.getText() != null && !accmdtTypeField.getText().trim().equals("")
                && addressField.getText() != null && !addressField.getText().trim().equals("")
                && costSpinner.getValue() != null && !costSpinner.getValue().equals(0)) {

            newAccmdt.setAccomodation_type(accmdtTypeField.getText());
            newAccmdt.setAddress(addressField.getText());
            newAccmdt.setCost((Double) costSpinner.getValue());
            Destination d = (Destination) accmdtDestCmb.getSelectedItem();
            newAccmdt.setDestination(d);

            try {
                AccomodationDAO dao = new AccomodationDAO();
                Boolean answ = dao.insertAccomodation(newAccmdt);
                if (answ == true) {
                    ImageIcon icon = new ImageIcon("src/travelagencymanagementsystem/resources/success.png");
                    JOptionPane.showMessageDialog(null, "Accomodation was added successfully", "Success", 0, icon);
                    DefaultListModel dm = new DefaultListModel();
                    ArrayList<Accomodation> accmds = dao.getAllAccomodations();
                    for (Accomodation ag : accmds) {

                        dm.addElement(ag);
                    }
                    accomodationsList.setModel(dm);

                    this.mainMenu.setVisible(true);
                    this.welcomePanel.setVisible(false);
                    this.logInPanel.setVisible(false);
                    this.destinationPanel.setVisible(false);
                    this.tripPanel.setVisible(false);
                    this.travellerPanel.setVisible(false);
                    this.newTravellerPanel.setVisible(false);
                    this.updateTravellerPanel.setVisible(false);
                    this.accomodationPanel.setVisible(true);
                    this.agentPanel.setVisible(false);
                    this.reservationPanel.setVisible(false);
                    this.newReservationPanel.setVisible(false);
                    this.newDestPanel.setVisible(false);
                    this.updateDestPanel.setVisible(false);
                    this.newTripPanel.setVisible(false);
                    this.updateTripPanel.setVisible(false);
                    this.modifyAgentPanel.setEnabled(false);
                    this.logedInAgent.setVisible(false);
                } else {
                    JOptionPane.showMessageDialog(null, "Something went wrong. Try again");
                }
            } catch (Exception e) {
                e.printStackTrace();
            }
        } else {
            ImageIcon icon = new ImageIcon("src/travelagencymanagementsystem/resources/tryagain.jpg");
            JOptionPane.showMessageDialog(null, "Please fill the fields", "Empty Fields", 0, icon);
        }
        accmdtTypeField.setText("");
        addressField.setText("");
        costSpinner.setValue(0);

    }//GEN-LAST:event_addAccmdtBtnActionPerformed

    private void deleteAccmdtBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteAccmdtBtnActionPerformed
        int index = accomodationsList.getSelectedIndex();
        Accomodation accmdt = (Accomodation) (Object) accomodationsList.getModel().getElementAt(index);
        AccomodationDAO dao = new AccomodationDAO();
        try {

            Boolean answ = dao.deleteAccomodation(accmdt);
            if (answ == true) {
                ImageIcon icon = new ImageIcon("src/travelagencymanagementsystem/resources/success.png");
                JOptionPane.showMessageDialog(null, "Trip deleted successfully", "Success", 0, icon);
                //rishfaq listen e update-uar

                ArrayList<Accomodation> accmdtss = dao.getAllAccomodations();
                DefaultListModel dm = new DefaultListModel();

                for (Accomodation tr : accmdtss) {
                    dm.addElement(tr);
                }
                accomodationsList.revalidate();
                accomodationsList.repaint();
                accomodationsList.setModel(dm);
                deleteAccmdtBtn.setEnabled(false);
                updAccmdtBtn.setEnabled(false);
            } else {
                ImageIcon icon = new ImageIcon("src/travelagencymanagementsystem/resources/deletionNotAllowed.jpg");
                JOptionPane.showMessageDialog(null, "Trip is in use", "Failed", 0, icon);
                deleteAccmdtBtn.setEnabled(false);
                updAccmdtBtn.setEnabled(false);
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
    }//GEN-LAST:event_deleteAccmdtBtnActionPerformed

    private void updAccmdtBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_updAccmdtBtnActionPerformed
        int index = accomodationsList.getSelectedIndex();
        Accomodation accmdt = (Accomodation) (Object) accomodationsList.getModel().getElementAt(index);

        if (accmdtTypeField.getText() != null && !accmdtTypeField.getText().trim().equals("")
                && addressField.getText() != null && !addressField.getText().equals(0)
                && costSpinner.getValue() != null && !costSpinner.getValue().equals(0)) {
            try {
                accmdt.setAccomodation_type(accmdtTypeField.getText());
                accmdt.setAddress(addressField.getText());
                accmdt.setCost((Double) costSpinner.getValue());

                Destination d = (Destination) accmdtDestCmb.getSelectedItem();
                accmdt.setDestination(d);

                AccomodationDAO dao = new AccomodationDAO();
                Boolean answ = dao.updateAccomodation(accmdt);
                if (answ == true) {
                    ImageIcon icon = new ImageIcon("src/travelagencymanagementsystem/resources/success.png");
                    JOptionPane.showMessageDialog(null, "Accomodation updated successfully", "Success", 0, icon);
                    this.mainMenu.setVisible(true);
                    this.welcomePanel.setVisible(false);
                    this.logInPanel.setVisible(false);
                    this.destinationPanel.setVisible(false);
                    this.tripPanel.setVisible(false);
                    this.travellerPanel.setVisible(false);
                    this.newTravellerPanel.setVisible(false);
                    this.updateTravellerPanel.setVisible(false);
                    this.accomodationPanel.setVisible(true);
                    this.agentPanel.setVisible(false);
                    this.reservationPanel.setVisible(false);
                    this.newReservationPanel.setVisible(false);
                    this.newDestPanel.setVisible(false);
                    this.updateDestPanel.setVisible(false);
                    this.newTripPanel.setVisible(false);
                    this.updateTripPanel.setVisible(false);
                    this.modifyAgentPanel.setVisible(false);
                    this.logedInAgent.setVisible(false);
                    deleteTripBtn.setEnabled(false);
                    updateTripBtn.setEnabled(false);
                } else {
                    JOptionPane.showMessageDialog(null, "Something went wrong. Try again");
                    deleteTripBtn.setEnabled(false);
                    updateTripBtn.setEnabled(false);
                }
            } catch (Exception e) {
                e.printStackTrace();
            }
        } else {
            ImageIcon icon = new ImageIcon("src/travelagencymanagementsystem/resources/tryagain.jpg");
            JOptionPane.showMessageDialog(null, "Please fill the fields", "Empty Fields", 0, icon);
        }
        accmdtTypeField.setText("");
        addressField.setText("");
        costSpinner.setValue(0);
    }//GEN-LAST:event_updAccmdtBtnActionPerformed

    private void cancelAccmdBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cancelAccmdBtnActionPerformed
        accmdtTypeField.setText("");
        addressField.setText("");
        costSpinner.setValue(0);
        updAccmdtBtn.setEnabled(false);
        deleteAccmdtBtn.setEnabled(false);

    }//GEN-LAST:event_cancelAccmdBtnActionPerformed

    private void newReservationActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_newReservationActionPerformed
        Reservation newRsv = new Reservation();
        try {
            Traveller trav = (Traveller) rsvTravellerCmb.getSelectedItem();
            newRsv.setTraveller(trav);
            Trip trip = (Trip) rsvTripCmb.getSelectedItem();
            newRsv.setTrip(trip);

            Login logAcc = new Login();;
            logAcc.setUsername(usernameField.getText());
            logAcc.setPassword(passwordField.getText());
            LoginDAO logdao = new LoginDAO();
            Login data = logdao.agentCredentials(logAcc);
            newRsv.setAgent(data.getAgent());
            
            ReservationDAO dao = new ReservationDAO();
            Boolean answ = dao.insertReservation(newRsv);
            if (answ == true) {
                ImageIcon icon = new ImageIcon("src/travelagencymanagementsystem/resources/success.png");
                JOptionPane.showMessageDialog(null, "Reservation added successfully", "Success", 0, icon);
                DefaultListModel dm = new DefaultListModel();
                ArrayList<Reservation> rsvs = dao.getAllReservations();
                for (Reservation ag : rsvs) {

                    dm.addElement(ag);
                }
                reservationList.setModel(dm);

                this.mainMenu.setVisible(true);
                this.welcomePanel.setVisible(false);
                this.logInPanel.setVisible(false);
                this.destinationPanel.setVisible(false);
                this.tripPanel.setVisible(false);
                this.travellerPanel.setVisible(false);
                this.newTravellerPanel.setVisible(false);
                this.updateTravellerPanel.setVisible(false);
                this.accomodationPanel.setVisible(false);
                this.agentPanel.setVisible(false);
                this.reservationPanel.setVisible(true);
                this.newReservationPanel.setVisible(true);
                this.newDestPanel.setVisible(false);
                this.updateDestPanel.setVisible(false);
                this.newTripPanel.setVisible(false);
                this.updateTripPanel.setVisible(false);
                this.modifyAgentPanel.setEnabled(false);
                this.logedInAgent.setVisible(false);
            } else {
                JOptionPane.showMessageDialog(null, "Something went wrong. Try again");
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
    }//GEN-LAST:event_newReservationActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton4ActionPerformed

    private void reserveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_reserveActionPerformed

    }//GEN-LAST:event_reserveActionPerformed

    private void reserveMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_reserveMouseClicked
        this.welcomePanel.setVisible(false);
        this.logInPanel.setVisible(false);
        this.destinationPanel.setVisible(false);
        this.tripPanel.setVisible(false);
        this.travellerPanel.setVisible(false);
        this.newTravellerPanel.setVisible(false);
        this.updateTravellerPanel.setVisible(false);
        this.accomodationPanel.setVisible(false);
        this.agentPanel.setVisible(false);
        this.reservationPanel.setVisible(true);
        this.newReservationPanel.setVisible(true);
        this.updateDestPanel.setVisible(false);
        this.newTripPanel.setVisible(false);
        this.updateTripPanel.setVisible(false);
        this.modifyAgentPanel.setVisible(false);
        this.logedInAgent.setVisible(false);
        this.logedInAgent.setVisible(false);
    }//GEN-LAST:event_reserveMouseClicked

    private void reservationPanelComponentShown(java.awt.event.ComponentEvent evt) {//GEN-FIRST:event_reservationPanelComponentShown
        try {
            ReservationDAO dao = new ReservationDAO();
            ArrayList<Reservation> accmdts = dao.getAllReservations();
            DefaultListModel dm = new DefaultListModel();

            reservationList.requestFocus();
            int index = reservationList.getSelectedIndex();
            for (Reservation d : accmdts) {
                dm.addElement(d);
            }
            reservationList.setModel(dm);

            
            TravellerDAO travellerDao = new TravellerDAO();
            ArrayList<Traveller> travs = travellerDao.getAllTravellers();
            DefaultComboBoxModel travcmb = new DefaultComboBoxModel();
            rsvTravellerCmb.requestFocus();

            for (Traveller d : travs) {
                travcmb.addElement(d);
            }
            rsvTravellerCmb.setModel(travcmb);
            
            TripDAO tripDao = new TripDAO();
            ArrayList<Trip> trips = tripDao.getAllTrips();
            DefaultComboBoxModel cmbModel = new DefaultComboBoxModel();
            rsvTripCmb.requestFocus();

            for (Trip d : trips) {
                cmbModel.addElement(d);
            }
            rsvTripCmb.setModel(cmbModel);
        } catch (Exception e) {
            e.printStackTrace();
        }

    }//GEN-LAST:event_reservationPanelComponentShown

    private void downloadRsvBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_downloadRsvBtnActionPerformed
        // TODO add your handling code here:
        //get a list of all reservations
        try {
            ReservationDAO dao = new ReservationDAO();
            ArrayList<Reservation> accmdts = dao.getAllReservations();
            //  write to file
            Document reservationDoc = new Document();
            reservationDoc.download(accmdts);
                //msg downloaded
            JOptionPane.showMessageDialog(null, "File downloaded successfully. Check for this file in your desktop");
        } catch (Exception e) {
            e.printStackTrace();
            JOptionPane.showMessageDialog(null, "Something went wrong. Try again");
        }
      
    }//GEN-LAST:event_downloadRsvBtnActionPerformed

    private void downloadDestListActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_downloadDestListActionPerformed
        try {
            DestinationDAO dao = new DestinationDAO();
            ArrayList<Destination> dest = dao.getAllDestinations();
            //  write to file
            Document reservationDoc = new Document();
            reservationDoc.downloadDestiation(dest);
                //msg downloaded
            JOptionPane.showMessageDialog(null, "File downloaded successfully. Check for this file in your desktop");
        } catch (Exception e) {
            e.printStackTrace();
            JOptionPane.showMessageDialog(null, "Something went wrong. Try again");
        }
      
    }//GEN-LAST:event_downloadDestListActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(TravelAgency.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(TravelAgency.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(TravelAgency.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(TravelAgency.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new TravelAgency().setVisible(true);
            }
        });
    }
//</editor-fold>

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField accName;
    private javax.swing.JTextField accPwd;
    private javax.swing.JTextField accSurname;
    private javax.swing.JTextField accUsnm;
    private javax.swing.JComboBox<String> accmdtDestCmb;
    private javax.swing.JTextField accmdtTypeField;
    private javax.swing.JMenu accomodationMenu;
    private javax.swing.JPanel accomodationPanel;
    private javax.swing.JList<String> accomodationsList;
    private javax.swing.JButton addAccmdtBtn;
    private javax.swing.JButton addAgentBtn;
    private javax.swing.JButton addDestBtn;
    private javax.swing.JButton addNewAccBtn;
    private javax.swing.JButton addTravellerBtn;
    private javax.swing.JButton addTripBtn;
    private javax.swing.JTextField addressField;
    private javax.swing.JComboBox<String> agentCmb;
    private javax.swing.JList<String> agentList;
    private javax.swing.JMenu agentMenu;
    private javax.swing.JTextField agentNameField;
    private javax.swing.JPanel agentPanel;
    private javax.swing.JSpinner agentSalarySpinner;
    private javax.swing.JTextField agentSurnameField;
    private javax.swing.JTextArea attracDescArea;
    private javax.swing.JButton cancelAccmdBtn;
    private javax.swing.JButton cancelAddTripBtn;
    private javax.swing.JButton cancelAgentModificationBtn;
    private javax.swing.JButton cancelDestBtn;
    private javax.swing.JButton cancelDestUpdBtn;
    private javax.swing.JButton cancelNewAccBtn;
    private javax.swing.JButton cancelReservation;
    private javax.swing.JButton cancelTravBtn;
    private javax.swing.JButton cancelTripUpd;
    private javax.swing.JButton cancelnewTrav;
    private javax.swing.JTextField cityField;
    private javax.swing.JTextField cityField1;
    private javax.swing.JButton continueButton;
    private javax.swing.JSpinner costSpinner;
    private javax.swing.JTextField dateFromField;
    private javax.swing.JTextField dateToField;
    private javax.swing.JButton deleteAccmdtBtn;
    private javax.swing.JButton deleteAccountBtn;
    private javax.swing.JButton deleteAgentBtn;
    private javax.swing.JButton deleteDestBtn;
    private javax.swing.JButton deleteTravellerBtn;
    private javax.swing.JButton deleteTripBtn;
    private javax.swing.JLabel destListLabel;
    private javax.swing.JComboBox<String> destinationCmbBox;
    private javax.swing.JMenu destinationMenu;
    private javax.swing.JPanel destinationPanel;
    private javax.swing.JList<String> destinationsList;
    private javax.swing.JButton downloadDestList;
    private javax.swing.JButton downloadRsvBtn;
    private javax.swing.JMenuItem editAccountMenuItem;
    private javax.swing.JLabel img;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton4;
    private javax.swing.JDialog jDialog1;
    private javax.swing.JDialog jDialog2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel23;
    private javax.swing.JLabel jLabel24;
    private javax.swing.JLabel jLabel25;
    private javax.swing.JLabel jLabel26;
    private javax.swing.JLabel jLabel27;
    private javax.swing.JLabel jLabel28;
    private javax.swing.JLabel jLabel29;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel30;
    private javax.swing.JLabel jLabel31;
    private javax.swing.JLabel jLabel32;
    private javax.swing.JLabel jLabel33;
    private javax.swing.JLabel jLabel34;
    private javax.swing.JLabel jLabel35;
    private javax.swing.JLabel jLabel36;
    private javax.swing.JLabel jLabel37;
    private javax.swing.JLabel jLabel38;
    private javax.swing.JLabel jLabel39;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel40;
    private javax.swing.JLabel jLabel41;
    private javax.swing.JLabel jLabel42;
    private javax.swing.JLabel jLabel43;
    private javax.swing.JLabel jLabel44;
    private javax.swing.JLabel jLabel45;
    private javax.swing.JLabel jLabel46;
    private javax.swing.JLabel jLabel47;
    private javax.swing.JLabel jLabel48;
    private javax.swing.JLabel jLabel49;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel50;
    private javax.swing.JLabel jLabel51;
    private javax.swing.JLabel jLabel52;
    private javax.swing.JLabel jLabel53;
    private javax.swing.JLabel jLabel54;
    private javax.swing.JLabel jLabel55;
    private javax.swing.JLabel jLabel56;
    private javax.swing.JLabel jLabel57;
    private javax.swing.JLabel jLabel58;
    private javax.swing.JLabel jLabel59;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel60;
    private javax.swing.JLabel jLabel61;
    private javax.swing.JLabel jLabel62;
    private javax.swing.JLabel jLabel63;
    private javax.swing.JLabel jLabel64;
    private javax.swing.JLabel jLabel65;
    private javax.swing.JLabel jLabel66;
    private javax.swing.JLabel jLabel67;
    private javax.swing.JLabel jLabel68;
    private javax.swing.JLabel jLabel69;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel70;
    private javax.swing.JLabel jLabel71;
    private javax.swing.JLabel jLabel72;
    private javax.swing.JLabel jLabel73;
    private javax.swing.JLabel jLabel74;
    private javax.swing.JLabel jLabel75;
    private javax.swing.JLabel jLabel76;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JMenu jMenu3;
    private javax.swing.JMenu jMenu4;
    private javax.swing.JMenuBar jMenuBar2;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JScrollPane jScrollPane6;
    private javax.swing.JScrollPane jScrollPane7;
    private javax.swing.JScrollPane jScrollPane8;
    private javax.swing.JScrollPane jScrollPane9;
    private javax.swing.JButton logInBtn;
    private javax.swing.JPanel logInPanel;
    private javax.swing.JPanel logedInAgent;
    private javax.swing.JMenuItem logoutMenuItem;
    private javax.swing.JMenuBar mainMenu;
    private javax.swing.JButton modifyAccData;
    private javax.swing.JPanel modifyAgentPanel;
    private javax.swing.JMenu myAccountMenu;
    private javax.swing.JTextField newAccPwdField;
    private javax.swing.JTextField newAccUsernameField;
    private javax.swing.JInternalFrame newAccount;
    private javax.swing.JTextArea newDestAttracArea;
    private javax.swing.JButton newDestBtn;
    private javax.swing.JPanel newDestPanel;
    private javax.swing.JButton newReservation;
    private javax.swing.JDesktopPane newReservationPanel;
    private javax.swing.JTextField newTravBdate;
    private javax.swing.JTextField newTravName;
    private javax.swing.JTextField newTravSurname;
    private javax.swing.JButton newTravellerBtn;
    private javax.swing.JPanel newTravellerPanel;
    private javax.swing.JButton newTrip;
    private javax.swing.JPanel newTripPanel;
    private javax.swing.JPasswordField passwordField;
    private javax.swing.JSpinner priceField;
    private javax.swing.JList<String> reservationList;
    private javax.swing.JPanel reservationPanel;
    private javax.swing.JMenu reserve;
    private javax.swing.JComboBox<String> rsvTravellerCmb;
    private javax.swing.JComboBox<String> rsvTripCmb;
    private javax.swing.JTextField stateField;
    private javax.swing.JTextField stateField1;
    private javax.swing.JTextField tittleField;
    private javax.swing.JMenu travellerMenu;
    private javax.swing.JPanel travellerPanel;
    private javax.swing.JList<String> travellersList;
    private javax.swing.JList<String> tripList;
    private javax.swing.JMenu tripMenu;
    private javax.swing.JPanel tripPanel;
    private javax.swing.JButton updAccmdtBtn;
    private javax.swing.JTextField updDateFromField;
    private javax.swing.JTextField updDateToField;
    private javax.swing.JSpinner updPriceSpiner;
    private javax.swing.JTextField updTravBdate;
    private javax.swing.JTextField updTravName;
    private javax.swing.JTextField updTravSurname;
    private javax.swing.JButton updTravellerBtn;
    private javax.swing.JComboBox<String> updTripDestCmb;
    private javax.swing.JTextField updTripTittleField;
    private javax.swing.JButton updateAgentBtn;
    private javax.swing.JButton updateDestBtn;
    private javax.swing.JPanel updateDestPanel;
    private javax.swing.JButton updateDestination;
    private javax.swing.JButton updateLoginDataBtn;
    private javax.swing.JButton updateTravBtn;
    private javax.swing.JPanel updateTravellerPanel;
    private javax.swing.JButton updateTripBtn;
    private javax.swing.JButton updateTripButton;
    private javax.swing.JPanel updateTripPanel;
    private javax.swing.JTextArea updtDestAttracArea;
    private javax.swing.JTextField usernameField;
    private javax.swing.JLabel welcomeLabel;
    private javax.swing.JPanel welcomePanel;
    // End of variables declaration//GEN-END:variables
}
